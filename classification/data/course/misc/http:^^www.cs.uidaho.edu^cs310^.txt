date tue nov gmt server ncsa content type text html last modified mon nov gmt content length cs computing languages cs computing languages course description major features good programming languages primary emphasis language features role writing good software programming language design alternatives various types languages including procedure data flow functional object oriented languages course goals explore notion programming language really investigate programming paradigms imperative object oriented functional programming class overview variety languages deep view programming paradigms list topics covered tools symbolic programming induction recursion scope syntactic abstraction data abstraction reduction rules imperative programming interpreters parameter passing object oriented languages type checking inference text daniel friedman mitchell wand christopher haynes essentials programming languages mit press mcgraw hill book company sixth printing grading course two examinations semester worth points exam october exam november comprehensive final examination worth points assignments semester total worth points instructor course john dickinson email address johnd syllabus cs assignments order use records defined discussed text need either download definitions records directories load scheme need use load command load usr local lib mit scheme records scm assignment assignment assignment assignment assignment class notes notes environment model material covered class oct revised chapter parameter passing read carefully print book sixth printing think proper modifications chapter older book might need print chapter printing d suggest using one laser printers duplexes laser laser duplex option oduplex missing chapter type checking errata essentials programming languages especially useful older version book errata gives changes printing changes occurred paper types polymorphism important paper type data abstraction polymorphism lucia cardelli peter wegner appeared computer surveys december reproduced permission postscript format program code provided authors essentials programming languages scheme language scheme dynamically typed functional language descended lisp several scheme manuals available web programming manual scheme reference scheme language mit scheme reference manual describes run time environment o facilities mit scheme user manual describes read eval print loop debugging loading compiling files addition line manuals might wish see line resources scheme site gives many pointers information scheme implementations scheme also scheme newsgroup comp lang scheme even line scheme interpreter try scheme directly web final exam schedule final examination comprehensive cover topics study semester section mwf final december wednesday pm