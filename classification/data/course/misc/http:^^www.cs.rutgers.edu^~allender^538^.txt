date tue nov gmt server ncsa last modified tue jan gmt content type text html content length syllabus complexity computation meeting times locations mondays wednesdays sec index number registration professor eric allender phone fax email allender cs rutgers edu office hill click current office hours text christos papadimitriou computational complexity various papers recent results supplement text rough course outline actual list topics may vary slightly list follows depending interests class instance would quite possible include material relationship finite model theory complexity theory sufficient interest course covers field computational complexity theory beginning fundamental theorems delimit one expect theory also study diagonalization techniques continue among powerful tools complexity theory gap theorem hierarchy theorems blum speed theorem levin lower bound theorem notions practical importance classifying complexity problems complexity classes reducibility among problems many important complexity classes characterized simply terms variants nondeterministic computation immerman szelepcsenyi theorem nondeterministic time hierarchy theorem feasible computation reducibility completeness alternation generalization nondeterminism useful relating time space complexity also models parallel computation circuit complexity alternating turing machines basic relations dtime dspace circuit complexity parallel computation polynomial hierarchy branching programs barrington theorem probabilistic computation circuit complexity presentation problems requiring large circuits np small circuits implies ph collapses related results probabilistic complexity classes basic inclusions closure properties deterministic circuits simulate probabilistic computation bpp ph toda theorem ph reducible pp closure properties pp connections threshold circuits relativization results oracles relative p np oracles relative p equal np related results interactive proofs collapse hierarchy elimination private coins ip pspace nexptime prover interactive proofs non relativizing proof techniques prerequisites familiarity basic notions data structures algorithms common models computation e g turing machines finite automata etc expected work bi weekly homework assignments