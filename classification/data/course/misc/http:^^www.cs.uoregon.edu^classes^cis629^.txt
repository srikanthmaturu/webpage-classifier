date tue nov gmt server apache content type text html content length last modified mon nov gmt cis computer architecture fall cis computer architecture fall instructor allen d malony url http www cs uoregon edu classes cis computer architecture science art selecting interconnecting hardware components create computer meets functional performance cost goals course qualitatively quantitatively examines computer design tradeoffs focus processor architectures memory systems multiprocessor machines particular study instruction level parallelism super pipelining super scalar arisc processor design memory hierarchies cache systems coherency mechanisms multiprocessor architectures parallel computing announcements instructor lecture required text reference text readings lecture notes homeworks examinations programming project grading approximate schedule tutorials tools miscellanea academic misconduct class roster announcements required text available bookstore readings packet available bookstore please read papers readings packet please read paper readings packet please read papers readings packet please read cache coherence papers readings packet please read sting paper readings packet please assignment describe programming section instructor allen d malony office deschutes hall email malony cs uoregon edu office hours monday wednesday appointment lecture time tuesday thursday place gilbert hall required text harold stone high performance computer architecture third edition addison wesley reference text john l hennessy david patterson computer architecture quantitative approach morgan kaufmann publishers second edition readings selected readings background processor design selected readings memory system architectures selected readings multiprocessor architectures part course accompanied set papers computer architecture literature reading packets available bookstore lecture notes lecture notes made available developed see links schedule homework two homework assignments many problems require review material touched upon covered depth class assignments due class due date late assignments accepted except extreme non academic circumstances discussed instructor least one week assignment due homework figure figure errata solutions homework combined programming assignment examinations midterm takehome oct halloween due nov please advise conflicts likely exam times end second week classes programming topic programming assignment cache simulation programming assigment combined second homework assignment two parts part run following trace files dinero cache simulator use dinero server found web page cc found dinero server options spice found dinero server options tex found dinero server options show results different levels cache size unified split associativity block sizes explain results see part following sample code models kbyte direct mapped cache byte lines blocks treats reads writes samewas simple reference included routine checks reference cache accummulates total references misses included o routines read reference trace assuming comes file stdio produce output statistics include include define cache size define block shift long tags cache size block shift long references misses void reference long address int index address cache size block shift long tag address block shift tags index tag misses tags index tag references add necessary o support briefly described code make cache simulation program takes reference trace file b write routine model way way set associative cache size c demonstrate operation three simulators three programs choosing find write three programs simple capture address references drive simulators one thought get three linpack codes note need modify programs capture references concentrate data references assignment due dec term project term project write paper surveys area within computer architecture paper summarize work area giving extensive references least present opinions others various options references conclude opinion strengths weaknesses arguments given graded completeness survey accuracy summaries support give opinions possible survey topics compiler transformations improve memory behavior superscalar superpipelined processors vs vliw effect architecture changing technology might consider different types technology high performance o e g storage network communication contrast state art processors massively parallel processing systems scalable architecture technologies aspect history computer architecture topic chosen something particularly interested many references papers including proc int l symposium computer architecture isca proc conf architectural support programming languages operating systems asplos int l conf parallel processing icpp supercomputing conf int l conf supercomputing ics ieee trans computers acm trans computer systems ieee computer grading homework midterm programming term project approximate schedule date topic assignment oct introduction chapter oct performance costs chapter readings oct pipelining chapter readings oct pipelining continued chapter readings oct instruction level parallelism ilp chapter readings tutorial oct ilp overcoming data hazards chapter readings tutorial oct ilp reducing branch penalties chapter readings tutorial oct ilp superscalar tutorial oct ilp limits takehome midterm nov cache systems chapter nov cache systems chapter readings nov memory systems chapter section readings nov multiprocessor systems chapter chapter readings nov class work project nov cache coherent memory systems chapter readings nov sequent sting architecture readings sequent sting paper nov multiprocessor architectures trip sequent nov thanksgiving thanksgiving dec multiprocessor architectures chapter readings dec multiprocessor architectures chapter readings dec project due project due class taught john conery class taught jan cuny monday makeup class tutorials prof driscoll portland state university developed online tutorial superscalar microprocessor design student must work expert level tutorial tools wisconsin architectural research tool set warts warts hopefully available project use dinero server dinero remote dinero c based cache simulation program provided part warts mint fast program driven simulator multiprocessor systems mint available project use instruction level simulation tracing contains huge list simulators emulators tracing tools including extensive bibliography well list people contact miscellanea computer architecture home page www computer architecture page designed university wisconsin madison act central repository links pointing information relevant computer architecture researchers students contains pointers seventy major architecture research groups projects major computer architecture related conferences industrial pages organizations news groups selection miscellaneous links interest computer architects usenet newsgroup computer architecture comp arch acm special interest group computer architecture sigarch cpu info center info current future processors performance database server benchmarks faq newsgroup comp benchmarks spec benchmarks spec spec benchmark suite standard performance evaluation corporation academic misconduct university oregon student conduct code student academic integrity brochure put uo dean students class roster al fudhail maan alaalove cs uoregon edu appayya vimala vimala cs uoregon edu fiskio lasseter jo johnfl cs uoregon edu galli mark mgalli cs uoregon edu gao yi ygao cs uoregon edu lindlan kathleen klindlan cs uoregon edu ma chia cha chiache cs uoregon edu palsule prachi pvp cs uoregon edu pusca lornel ionel cs uoregon edu reimer yolanda yreimer cs uoregon edu robertson chad carober cs uoregon edu sai teck tecks cs uoregon edu sather jim jims cs uoregon edu sheth sai saisheth cs uoregon edu skidmore jenifer skid cs uoregon edu svitak john svitak cs uoregon edu wang chien chung chien cs uoregon edu wang zhunqin zhunqinw cs uoregon edu xiao yong xiao cs uoregon edu xue jianzhong xue cs uoregon edu yang shuang sqyang cs uoregon edu yao lixing ylixing cs uoregon edu