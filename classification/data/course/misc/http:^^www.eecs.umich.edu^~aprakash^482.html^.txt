date tue nov gmt server apache dev content type text html set cookie apache gs path um eecs eecs eecs fall introduction operating systems professor atul prakash class time tth class location eecs office eecs bldg office hours th phone voice mail email aprakash umich edu ta hengming zou discussions w eecs w eecs office hours w w eecs email zou eecs umich edu ta wengming jiang discussions w eecs th eecs office hours f eecs email weijiang engin umich edu ta shailesh nalawadi discussions m eecs m eecs office hours m f eecs email nalawad engin umich edu newsgroup umich eecs class approximate semester schedule class notes handouts announcements etc eecs introductory course operating systems senior undergraduate level first year graduate level objective course familiarize issues involved design implementation modern operating systems concepts discussed applicable variety systems however discuss many examples drawn historically significant modern operating systems including multics unix mach windows nt topics discussed include processes threads interprocess communication concurrency synchronization deadlocks communication distributed systems including remote procedure calls cpu scheduling virtual memory management input output systems disk scheduling file systems protection security students expected extensive programming experience prior course knowledge c c programming language familiarity unix required prerequisites computer organization eecs data structures eecs essential class textbook operating system concepts th edition silberchatz glavin addison wesley supplemental reading material notes provided semester suggested textbooks advanced programming unix environment stevens addison wesley modern operating systems tanenbaum prentice hall assignments complete four programming projects working individually groups two decision relating implementation operating systems programming c c programming language prepared spend substantial amount time readings programming projects also several homework assignments done individually grading grades based two exams four programming assignments several homeworks according following tentative weightage homeworks midterm final four programming projects experience teaching software courses past people well programming projects exams homeworks end distinguishing factors determine grade students hand poorly programming projects sure way fail course also note grade determining performance term determining future potential well able apply course employment etc end well future really matters important lose sight bigger picture beyond grades instead simply focus course best potential making sure take advantage tas learn material many employers treat knowledge material course true test experienced software practioner policy collaboration unethical behavior copying modifying someone else project assignment code looking students directories material expect copying homeworks etc permissible hand encouraged discuss homework problems project assignments fosters learning work computer industry done team effort case please write names students discussed homeworks projects submissions however note homework solutions actual code must shared homeworks must written individually code submitted must unless instructor permission taken source acknowledged class communication tools use variety mechanisms communicate within class links eecs home page http www eecs umich edu aprakash html tools include class newsgroup experimental java based chat facility course email also attempt provide handouts line