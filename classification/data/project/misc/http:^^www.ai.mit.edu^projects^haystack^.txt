date mon nov gmt server apache dev connection close content type text html expires mon nov gmt last modified fri aug gmt etag c de f content length accept ranges bytes haystack home page internal haystack page moved send mail need find public page construction welcome haystack pull straw make home great deal research information retrieval detached users could eventually benefit research one hand traditional ir research systems cut inconvenient interface limited unchanging text collection fixed set evaluation queries become increasingly date time passes hand recent surge web search tools resulted many deployed ir systems convenient often limited interfaces generally fixed least non modifiable corpora systems harvest content routing attempted address gaps two extremes focusing construction flexible substrate allows users communities build repositories queries haystack project aimed individual customization end realistic living information retrieval systems interested building customizable substrates provided harvest content routing create community individual interacting haystacks personal information repositories archive base content also user specific meta information enabling adapt particular needs users believe system let us address several questions individuals use information retrieval system organize personal collection information might information retrieval system learn users evolve time effective system individuals build collections information retrieval systems search information might located others collections especially information organized information retrieval systems may differ greatly first step towards goal design simple convenient user interface annotation format information retrieval system current annotations emphasize user independent text meta information format structure annotations intended encompass hand generated automatic user specific annotations annotations first class documents system example search information reified treated indexable object implementation chosen detach information retrieval engine user interface annotation system specifying engine accept natural language query return documents match whatever criteria uses begun using mg information retrieval system concurrently investigating back ends including content routing harvest house image based ir system top arbitrary engine implementing several interfaces retrieval well annotation editing first web proxy based interface allows users connect information retrieval engine via favorite web browser maximize ease use also developing shell emacs based tools talking collection haystack intended archive objects text extracted initially implementing appropriating textifiers ascii postscript html scanned documents architecture easily extensible documents types intent simple standalone version haystack easy integrate everyday use since project even minimal system use people aiming organize mail file system favorite web pages therefore expect attract moderate size community users mit system use able leverage annotation facilities explore several questions first question information retrieval system actually used practice gathering usage data permission hope learn kinds queries people typically use usually boolean nature single words tend precise find documents overgeneralize get swamped useless results react comes back refinement strategies use haystack provide user specific set answers questions second question system might learn interaction user consider scenario user types initial query q undertakes several stages refinement home document d wants future system learn user types query like q document d likely relevant even appear good match annotation system allows user system level support learning process system might annotate document terms appear user types expects find document user might also add keywords mnemonic phrases document expectation future searches ultimately system may able make user specific generalizations based automatically manually entered optimization annotations given individuals organizing information care natural ask one user benefit work users consider typical way search paper book ask one office neighbor analogously would like let individuals search information people haystacks limit costs search improve filtering returned important system learn time individuals likely information given user finds relevant haystack neighbors systems queried first whose results trusted another opportunity linking haystacks creates connecting individuals people address information need information stored haystack likely good indicator knowledge interests question matches lot material haystack likely question usefully answer haystack system therefore serve information brokerage connecting questioners experts sharing haystacks also raises issue generalizing individuals customization haystacks larger pooled data sets provides another opportunity test adaptability query strategies test generalization underlying learning algorithms common thread among ideas user specific customization information repositories retrieval processes issues possible explore hybrid world provided newest generation information access tools developing haystack system attract community users provide necessary testbed exploring questions evolving interacting customized information systems hayfolk david karger lynn andrea stein eytan adar mark asdoorian dwaine clarke lili liu eric prebys chuck van buren comments haymaster