date tuesday nov gmt server ncsa mime version content type text html last modified thursday oct gmt content length persistent linda home page abstract source people cs department courant nyu persistent linda software system robust distributed parallel computing want write us objectives objectives plinda project two fold fault tolerant parallel computing provide language constructs facilitate design high performance fault tolerant parallel programs harness aggregate power idle cycles networks workstations manner fault tolerant disturb owners workstations system models non idleness e g user returns workstation failure work done idle workstation moved applications major class plinda applications long running coarse grain parallel applications example applications nile project data mining eg biological pattern discovery distribution source code available install please refer plinda user manual additional information faq future work debuggers run time visualization tools software tools writing parallel distributed programs performance improvements scientific applications programming tools data mining distributed run time kernel plinda suggestions please feel free send mail plinda cs nyu edu people dennis shasha professor brian anderson former student tom brown student karp joo jeong former student bin li student jihai qiu student suren talla student peter wyckoff student publications plinda user manual postscript karpjoo jeong fault tolerant parallel processing combining linda chec kpointing transactions ph d thesis department computer science new york university click postscript version karpjoo jeong dennis shasha persistent linda transaction checkpointing approach fault tolerant linda proceedings th symposium fault tolerant distributed systems october click postscript version brian anderson dennis shasha persistent linda linda transactions query processing workshop research directions high level parallel programming languages mont saint michel france june published springer verlag lecture notes computer science click postscript version fault tolerant systems last modified bin li october