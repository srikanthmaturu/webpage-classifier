date wed nov gmt server apache content type text html content length last modified wed sep gmt formal methods system design verification university utah department computer science utah verifier uv project formal methods system design verification uv cartoon synopsis process designing modern digital hardware systems e g multiprocessors quite challenging many ways especially terms correctness problems must solved projects area last several years large group sizes constantly face changing requirements personnel turnover well newly unearthed often unanticipated facts applying today verification tools verify entire systems nature requires inordinate amounts human effort well computer resources darpa award utah verifier uv project hopes address solve problems making formal verification techniques apply problems industrial scale ideas developed context real systems projects avalanche specific activities date include efficient explicit enumeration methods based new partial order reduction methods model checking non trivial industrial bus specifications specific activities planned include creation following suite verification tools explained uv system block diagram pv protocol verifier pv accept descriptions extended subset protocol modeling language promela key extensions area incorporating abstract data types uninterpreted functions employ efficient fly explicit enumeration algorithms unique feature pv support refining high level protocol descriptions assume infinitely sized communication buffers use finite shared buffers cv cycle level verifier cv accept descriptions extended subset verilog key extensions area incorporating abstract data types perform implicit enumeration efficiently using recently developed graph representations logic functions multiway decision graphs corella et al cv also support many pragmatically motivated features including facility accept test vectors pv cross validating pv cv models sv switch level verifier sv feature use parametric forms boolean expressions investigated us incorporating input constraints symbolic simulation vectors verification conditions established sv symbolic simulation derived descriptions provided cv tool db design requirements base db shared members project group core db based pvs verification system sri expressive power pvs theory description language permit design requirements captured high level abstraction also permit future extensions exploit pvs full power also permit state transition relation pv cv translated pvs prove key system properties db also facilities translate assertions design requirements base assertions verified pv mainly protocol cv mainly data layout cycle level details tools ensure consistency models valuable aspect organization permit regression verification runs design changes db tool hypertext based api allowing designers pursue links various pieces specification benchmark examples benchmark examples cutting across several hierarchical levels abstraction released key verification benchmark suite delivered distributed shared memory cache protocol refinement hardware realization using industrial bus routing network refinement bus transactions refinement bus arbitration schemes flow control way bus interface logic details prospective graduate students post doctoral fellows encouraged contact ganesh cs utah edu see http www cs utah edu ganesh details faculty ganesh gopalakrishnan alan davis students ratan nalumasu ravi hosabettu