date thu nov gmt server ncsa content type text html uw dynamic compilation project uw dynamic compilation project information dynamic compiler project members papers related projects uw sections student projects group web dynamic compilation enables optimizations based values invariant data computed run time using values run time constants dynamic compiler eliminate memory loads perform constant propagation folding remove branches determine fully unroll loops bound however performance benefits efficient dynamically compiled code offset run time cost dynamic compile approach dynamic compilation strives fast dynamic compilation high quality dynamically compiled code programmer annotates regions programs compiled dynamically static optimizing compiler automatically produces pre optimized machine code templates using pair dataflow analyses identify variables constant run time simple dynamic compiler copies templates patching computed values run time constants produce optimized executable code work targets general purpose imperative programming languages initially c initial experiments applying dynamic compilation c programs produced speedups ranging part spin project eventually system used dynamically compile code spin kernel example spin event dispatcher however also actively exploring possible applications dynamic compilation virtual machine interpreters prototype dynamic compilation system described pldi paper starting design build second generation system release details soon last updated august grant cs washington edu