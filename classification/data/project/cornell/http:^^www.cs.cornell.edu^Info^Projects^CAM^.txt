mime version server cern date wednesday nov gmt content type text html content length last modified wednesday jul gmt cornell active messages cornell active messages cornell active messages implementations active messages u net source code release u net active messages part general u net release conforms gam spec information see u net project pages active messages ibm sp object code release sp aix available gam aix tar z conforms gam spec please read readme install files distribution instructions using sp information contact chi chao chang grzegorz czajkowski thorsten von eicken please read releasenotes aix file find changes previous version current version sp f also release aix gam aix tar z major difference aix release modified usr lpp ppe poe lib us libmpci included distribution please read documentation package details interested knowing currently using sp please click send brief note letting us know something organization uses intend sp selected publications active messages low latency communication ibm risc system sp chi chao chang grzegorz czajkowski chris hawblitzel thorsten von eicken appear acm ieee supercomputing pittsburgh pa november abstract ibm sp one powerful commercial mpps yet spite fast processors high network bandwidth sp communication latency inferior older machines tmc cm meiko cs paper investigates use active messages communication primitives alternative standard message passing order reduce communication overheads offer good building block higher layers software first part paper describes implementation active messages sp layered directly top sp network adapter tb comparable bandwidth sp low overhead yields round trip latency lower ibm mpl second part paper demonstrates power communication substrate layering split c well mpi split c benchmarks used compare sp mpps show low message overhead high throughput compensate sp high network latency mpi implementation based freely available mpich version achieves performance equivalent ibm mpi f nas benchmarks design performance active messages sp chi chao chang grzegorz czajkowski thorsten von eicken cornell cs technical report february abstract technical report describes design implementation evaluation active messages ibm sp implementation benchmarked uses standard tb network adapter firmware use ibm software power processor assume familiarity concepts underlying active messages main performance characteristics one word message round trip time us asymptotic network bandwidth mb presenting selected implementation details paper focuses detailed performance analysis including comparison ibm message passing layer mpl split c benchmarks generic active message specification version generic active message specification version defines active messages interface portable across variety parallel machines implementations available u net atm cluster meiko cs hpam fddi ring paragon sp low latency communication atm networks using active messages thorsten von eicken veena avula anyndia basu vineet buch presented hot interconnects ii aug palo alto ca abridged version paper appears ieee micro magazine feb slides hot interconnect talk abstract recent developments communication architectures parallel machines made significant progress reduced communication overheads latencies order magnitude compared earlier proposals paper examines whether techniques carry clusters workstations connected atm network even though clusters use standard operating system software equipped network interfaces optimized stream communication allow direct protected user level access network use networks without reliable transmission flow control first part paper describes differences communication characteristics clusters workstations built standard hardware software components state art multiprocessors lack flow control operating system coordination affects communication layer design significantly requires larger buffers end multiprocessors second part evaluates prototype implementation low latency active messages communication model sun workstation cluster interconnected atm network measurements show application application latencies microseconds small messages roughly comparable active messages implementation thinking machines cm multiprocessor active messages mechanism integrated communication computation von eicken d e culler c goldstein k e schauser proceedings th int l symp computer architecture may gold coast australia abstract design challenge large scale multiprocessors minimize communication overhead allow communication overlap computation coordinate two without sacrificing processor cost performance show existing message passing multiprocessors unnecessarily high communication costs research prototypes message driven machines demonstrate low communication overhead poor processor cost performance introduce simple communication mechanism active messages show intrinsic architectures allows cost effective use hardware offers tremendous flexibility implementations ncube cm described evaluated using split phase shared memory extension c split c show active messages sufficient implement dynamically scheduled languages message driven machines designed mechanism latency tolerance becomes programming compiling concern hardware support active messages desirable outline range enhancements mainstream processors active messages efficient communication architecture multiprocessors von eicken ph d thesis november university california berkeley projects sites active messages berkeley project information contact thorsten von eicken