date wed nov gmt server apache content type text html content length last modified thu jul gmt karsten schwan home page karsten schwan research statement programming operating systems high performance platforms college computinggeorgia institute technologyatlanta ga schwan cc gatech edu prof schwan working experimental commercial parallel machines since inception late research driven relevant applications developed part multidisciplinary laboratory georgia tech hppcel laboratory contains uniprocessor multiprocessor supercomputers cray machine ibm sp networked sets workstations like ibm rs sun sgi machines research also driven future heterogeneous smp distributed systems infrastructure experienced commercial research settings distributed laboratories project constructing heterogeneous computing environment consisting atm networked uniprocessor smp machines jointly offering computational power interconnection bandwidth modern supercomputers applications hppcel laboratory hppcel laboratory experimentation parallel applications undertaking development several sample large scale parallel applications jointly end users atmospheric modeling finite element codes fluid flow applications case applications consist specific computational tasks also include online analyses performed computations real time visualizations program data monitoring performance information executed simultaneously end users inspect program results steer program executions gain experimental insights additional applications used evaluate operating system support program adaptation programming environments research included robotics applications real time simulations asv autonomous suspension vehicle schema based robot navigation discrete event simulations b real time multi media applications involving multiple machines human end users c design implementation interactive graphical interfaces high performance applications d graph based searching algorithms used solution operations research problems distributed laboratories topic joint research realization distributed laboratories individuals interact importantly powerful distributed computational tools readily located single site intent permit scientists engineers managers geographically distinct locations including individuals tele commuting home combine expertise solving shared problems allowing simultaneously view interact steer sophisticated computations executing high performance distributed computing platforms prof schwan primary contribution effort concerns construction distributed laboratory experimentation high performance numeric computations applications molecular physics atmospheric sciences working high performance atmospheric pollution modelling manufacturing systems addition prof schwan group involved development basic technologies facilitating use future heterogeneous large scale distributed parallel systems technologies concerned middleware software directly utilized distributed laboratory applications described detail falcon project studying dynamic monitoring adaptation interactive steering high performance computations line control virtual laboratory instruments experimentation complex simulation models distributed laboratory users cobs project concerned distributed systems communication technologies underlying distributed laboratory applications emphasis distributed systems research support shared state multi granular distributed computing environments research communication protocols concerned providing necessary communication latencies bandwidths transmission guarantees across heterogeneous underlying communication media prof schwan current research addresses three basic research topics addressing computational requirements underlying hardware systems presented hppcel distributed laboratory efforts programming support tools operating systems communication protocols programming tools falcon falcon project addresses construction interactive parallel programs even permitting programmers steer applications steering may defined program steering program interact human users execution purpose interactions use line program information affect steer program execution falcon project goal high performance programs become equally interactive commonly used pc tools e g spreadsheets program performance either maintained improved expectation scientists work effectively able view program results execution steer program execution toward useful data domains initial experience line steering improve performance programs avoiding needless execution adapting algorithmically specific program abstractions better match functionality dynamically varying program characteristics essence expect gain significant increases usefulness parallel programs end users program performance use steering falcon offers specific support program performance monitoring evaluation tuning provide system integration support using incore data dictionary using falcon information required performance tuning easily captured analyzed displayed used program performance improvement program monitoring performed identical fashion shared non shared memory parallel machines using language based graphical user interfaces using programming extensions falcon development program tuning performed graphically well explicit manipulation parallel programs displayed hierarchical sets related objects tools used context large scale parallel applications interactively steered end users falcon tool operational suns sgis ibm rs ibm sp ksr machine falcon programming extensions still construction runtime support already operational adaptable operating systems efficient execution parallel program requires operating system primitives match program performance reliability requirements constructing evaluating novel operating system mechanisms multiple parallel architectures studying high performance operating system support multiple parallel applications including real time applications scientific engineering codes discrete event simulations optimization codes research resulted several software libraries facilitate construction parallel programs cthreads library commonly used operating systems parallel computing courses available many uniprocessor multiprocessor machines extensions toward configurable cthreads address line monitoring configuration high performance parallel programs ranging rapid adaptation individual program abstractions user directed program steering specific examples configurable abstractions constructed cthreads basis include adaptable multiprocessor locks able improve program performance adapting lock characteristics program behavior program execution adaptable communication protocols dsa distributed shared abstractions library construction distributed objects available shared prototype version distributed memory machines including networks workstations purpose support programmers construction efficient program abstractions capable spanning shared memory distributed memory platforms initial smp prototype extended address sets platforms including larger scale distributed systems see cobs project described kernel toolkit ktk substrate parallel programming development multiprocessor operating system kernels object level gives developers ability construct custom implementations object based operating system abstractions objects customized using meta object like interfaces described object attributes implemented policies since policies may present runtime ktk objects may also dynamically adapted suit varying runtime requirements parallel distributed applications ktk attributes principal basis construction adaptable objects cobs project described next git c c lda scalable line multiprocessor scheduling real time systems authors hongyi zhou karsten schwan git cc rapid multiprocessor scheduler dynamic real time applications authors harold forbes karsten schwan equally importantly recent research addressing formulation support timing constraints distributed information systems offering program program communications human interactive services systems benchmark application developed group able emulate behavior video delivery systems dynamic systems like git cc ports experiences scheduler dynamic real time systems authors kaushik ghosh richard m fujimoto karsten schwan git cc reconfigurable garbage collection data structures speculative real time system authors kaushik ghosh recent publications jeffrey vetter karsten schwan progress toolkit interactive program steering proceedings international conference parallel processing oconomowoc wisconsin august weiming gu greg eisenhauer eileen kraemer john stasko jeffrey vetter karsten schwan falcon line monitoring steering large scale parallel programs fifth symposium frontiers massively parallel computation mclean virginia february jeffrey vetter greg eisenhauer weiming gu thomas kindler karsten schwan dilma silva opportunities tools highly interactive distributed parallel computing color version proceedings workshop debugging tuning parallel computing systems chatham ma october greg eisenhauer weiming gu karsten schwan niru mallavarupu falcon toward interactive parallel programs line steering molecular dynamics application high performance distributed computing hpdc san francisco ca aug weiming gu jeffrey vetter karsten schwan annotated bibliography interactive program steering acm sigplan notices july kaushik ghosh kiran panesar richard fujimoto karsten schwan ports parallel optimistic real time simulator th workshop parallel distributed simulation pads july greg eisenhauer karsten schwan md flexible framework high speed parallel molecular dynamics high performance computing proceedings scs simulation multiconference pages april society computer simulation ahmed gheith bodhi mukherjee dilma silva karsten schwan ktk kernel support configurable objects invocations second international workshop configurable distributed systems ieee acm march bodhi mukherjee karsten schwan improving performance use adaptive objects experimentation configurable multiprocessor threads package second international symposium high performance distributed computing hpdc spokane washington july prince kohli mustaque ahamad karsten schwan indigo user level support building distributed shared abstractions fourth international symposium high performance distributed computing hpdc kaushik ghosh richard m fujimoto karsten schwan time warp simulation time constrained systems th workshop parallel distributed simulation pads san diego may kaushik ghosh richard m fujimoto karsten schwan testbed optimistic execution real time simulations ieee workshop parallel distributed real time systems newport beach april ahmed gheith karsten schwan chaos arc kernel support atomic transactions real time applications acm transactions computer systems april hongyi zhou karsten schwan ian akyildiz performance effects information sharing distributed multiprocessor real time scheduler th real time systems symposium dec karsten schwan hongyi zhou dynamic scheduling hard real time tasks real time threads ieee transactions software engineering august partial list current recent students greg eisenhauer falcon project harold forbes real time systems kaushik ghosh jointly r fujimoto real time simulation weiming gu falcon project daniela ivan real time communications scheduling robin kravets high performance communications vernard martin vernard martin falcon project bodhi mukherjee adaptable operating system kernels byron jeff real time control multi media applications dilma silva high performance objects phyllis schneck adaptable communications jeffrey vetter falcon project rich west real time threads communications hongyi zhou real time scheduling thomas kindler mary trauner jointly school eas parallel modeling atmospheric conditions shih chang chuang advisor r fulton finite element computation parallel machines eileen kraemer advisor j stasko performance animation parallel programs ranjit john advisor m ahamad implementing programming weakly consistent memories