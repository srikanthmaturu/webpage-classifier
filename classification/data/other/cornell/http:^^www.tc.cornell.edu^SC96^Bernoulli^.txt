date sun dec gmt server ncsa content type text html last modified fri nov gmt content length bernoulli project bernoulli project building tools constructing problem solving environments pses computational science engineering many applications involve numerical solution partial differential equations like navier stokes equations equations elasticity commonly used solution methods like finite element finite difference methods convert problem solving differential equations solving systems algebraic equations using process called discretization algebraic equations solved using numerical techniques like gaussian elimination krylov space methods newton method bernoulli project integrates breakthroughs three areas discretization tools restructuring compiler technology runtime systems discretization tools implemented rich zippel using weyl symbolic algebra substrate weyl extends data structures available common lisp include objects like matrices vectors rational functions rings etc discretization toolkit implements weighted residual method subsumes finite element finite volume spectral methods finite difference schemes also implemented systems equations produced discretization written form ax b large sparse matrix b known vector x vector unknowns large systems equations solved parallel machines like ibm sp using solvers exploit sparsity matrix reduce computation communication requirements developing restructuring compiler technology transform specifications solvers expressed sequential programs operating dense matrices parallel codes exploit sparsity target compiler runtime substrate parallel machines conforms ports specification portability runtime substrate provides low latency message passing global address space distributed memory platforms like ibm sp experimenting versions based mpi active messages copyright copy cornell university