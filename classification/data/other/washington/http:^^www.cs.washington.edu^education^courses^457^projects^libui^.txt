date mon dec gmt server ncsa content type text html cse libui documentation autumn quarter libui interface library overview reference data types constants macros routines initialization routines window routines control routines image routines drawing routines miscellaneous routines glossary index documentation still needs work find anything confusing incomplete please let know comments may greatly facilitate revision overview user interface library using designed powerful simple use provides buttons toggle buttons sliders rectangular drawing areas file dialogs text feedback area main things libui library provides main application window application main window hold controls text area drawing areas etc window created application calls uiinitwindow buttons add buttons control area upper right part main window take action pressed buttons created actions specified calling uiaddbutton toggle buttons add toggle buttons control area main window set either true false user toggle buttons created calling uiaddtogglebutton current state true false toggle button queried calling uigettogglebuttonstate sliders sliders added control area allow user control continuous parameter sliders created call uiaddslider current value slider retrieved using uigetslidervalue set value slider using uisetslidervalue menus menus added control area allow user select desired option menus created call uimakemenu menu item added using uiaddmenuitem drawing areas rectangular areas within main application window rendered using opengl created calling uiaddwindow text area optional area bottom main window used display text allow user input text text displayed set using uisettext examined uigettext file selection dialogs applications present file selection dialog boxes let user specify file dialog box presented calling uipostfiledialog call returns immediately dialog put application notified ok button pressed callback procedure invoked event handling applications respond user systems actions buttons pressed windows becoming visible event callbacks routines called system response types events callbacks usually specified interface element created also function call uibusycursor prevent user interactions program finishes executing certain process reference data types constants uibool boolean type typedef enum uifalse uitrue uibool uicolorrgb rgb color type typedef struct float r float g float b uicolorrgb uidrawingplane different planes draw specified calling uisetcurrentwindow typedef enum uinormal uioverlayplane uidrawingplane uinormal normal drawing plane full color drawing plane colors specified using glcolor calls drawing take place plane uioverlayplane overlay plane drawing plane sits top normal plane used draw top things without disturbing plane indexed color plane colors specified using glindex index transparent uiappoptions options uiinitwindows call options parameter call logical desired options uinone none typedef enum uihasnone uihascontrols uihastext uihasdouble uiappoptions uihasnone none following uihascontrols control area upper right main window present uihastext text area bottom main window present uihasdouble double buffering enabled application uiindexedcolormode main windows use indexed color examples uiinitwindows null uihascontrols uiinitwindows null uihascontrols uihastext uimouseaction enumerated type indicating kind mouse action taken place typedef enum uileftmousedown uileftmouseup uileftmousedrag uileftmouseclick uirightmousedown uirightmouseup uirightmousedrag uirightmouseclick uimouseaction uileftmousedown uirightmousedown left right mouse button pressed uileftmouseup uirightmouseup left right mouse button released uileftmousedrag uirightmousedrag mouse moved button held drag action always preceeded corresponding uimousedown action uileftmouseclick uirightmouseclick mouse button briefly pressed released without motion uimouseclick action reported corresponding uimousedown uimouseup actions reported uiwindow opaque type returned uiaddwindow uislider slider type returned uiaddslider uitogglebutton toggle button type returned uitogglebutton callback types typedef void uiexposecallback uiwindow window exposure callback routine called response window exposed window window exposed application force exposure routine called calling uidirtywindow typedef int uiidlecallback void idle procedure called periodically system nothing better idle procedure added work queue uisetidlecallback removed depending upon return value idle procedure true idle procedure task removed work queue put back queue need call uisetidlecallback false idle procedure task remain event queue typedef int uitimercallback void similar idlecallback also incorporates pause interval timer procedure added uisettimercallback define pause interval milliseconds like idle procedure timer procedure added removed depending return value true timer procedure remove timer queue put back queue need call uisettimercallback false timer procedure task remain event queue typedef void uicallback void button slider callback called response user pressing button moving slider associated see uiaddbutton uiaddtogglebutton uiaddslider typedef void uimousecallback uiwindow window int x int y uimouseaction action mouse action callback called response mouse input window window window mouse action took place x y location mouse action action mouse action caused callback invoked applications specify mouse callback routine uiaddwindow typedef void uifileboxcallback char filename file selection dialog callback routine filename name file selected ok button pressed uimenucallback image library types typedef enum scalar vector argtype color depth image scalar image black white vector image color typedef struct real x y z vector vector type images x used red component y used green z used blue typedef struct int width height argtype type union real scal image vector vec image image int scale pixel values real pixel scale factor image image type routines available accessing fields structure shouldn worry macros following macros defined libui define min b fairly simple expands find minimum two items define max b b b min complement define clamp x lo hi max min x hi lo clamps number specified x hi lo routines initialization routines void uisetcontrolwidth int width void uisetcontrolheight int height sets width height control area buttons sliders placed control area located upper right corner main application window void uisettextheight int height sets height text area bottom application window text displayed area changed examined calling uisettext uigettext void uisetmainwindowwidth int width void uisetmainwindowheight int height sets size main application window includes control area text area application make sure window big enough hold things wants place inside uibool uiinitwindows unsigned int argc char argv uiappoptions options initializes interface library creates main application window argc argv wish pass arguments main uiinitwindows normally would pass null options sets aspects application windows enabled may elect text region control region double buffer see definition uiappoptions complete list options select two options pass logical application call uiinitwindows initialize ui library call made sizes parts application set void uimainloop function starts applications main loop loop libui process user interaction call appropriate callbacks defined nb function never returns last statement main function window routines uiwindow uiaddwindow int x int y int width int height uiexposecallback expose uimousecallback mouse void userdata adds drawing area inside main window x y x y location upper left corner new window relative upper left corner main application window note coordinate system used call unfortunately considers origin upper left x increasing going right y increasing going coordinate system used opengl considers origin lower left corner y increasing going width height width height new window expose callback invoked window exposed callback invoked pass null expose paramater mouse callback invoked response mouse input window mouse callback invoked pass null mouse paramater userdata pointer private data wish associate window private data necessary pass null userdata paramater drawing areas rectangular regions application drawing specify window drawn application must call uisetcurrentwindow void uisetuserdata uiwindow window void data sets window private data point data void uigetuserdata uiwindow window retrieves window private data void uisetcurrentwindow uiwindow window uidrawingplane plane sets current drawing window window window drawing done plane drawing layer onto drawing done plane uinormal drawing take place normal drawing window plane uioverlayplane drawing take place overlay plane note normal drawing plane uinormal full color rgb plane overlay plane uioverlayplane indexed plane void uidirtywindow uiwindow window forces window expose callback invoked window window whose expose callback invoked call used signal window redisplay contents useful application written way drawing done mostly inside expose callbacks helps concentrate drawing code one area turn helps locate drawing related bugs void uigetwindowsize uiwindow window int width int height returns size window width height pass null either care values void uimapcoordinates uiwindow src uiwindow dst int x int y maps location coordinate space one window coordinate space another often used one window contained withing another src source window coordinates initially expressed dst destination window coordinates translated x y point window src translated routine returns set transformed coordinates control routines void uiaddbutton char label uicallback pushcallback adds button control control area label text used label button pushcallback callback procedure invoked button pushed controls buttons sliders menus etc added one another starting top control area uitogglebutton uiaddtogglebutton char label uibool initialstate uicallback valuechangedcallback adds toggle button control area label text used label button initialstate initial state toggle button valuechangedcallback callback procedure invoked state toggle button changes toggle button checkbox small button set either true false user toggle buttons like controls added one another starting top control area uibool uigettogglebuttonstate uitogglebutton button returns current state button void uisettogglebuttonstate uitogglebutton button uibool state sets current state toggle button button state uislider uiaddslider char label double value double min double max int decimals uicallback valuechangedcallback adds slider control control area label name slider value initial value slider min max minimum maximum values slider decimals number decimals use eg decimals etc valuechangedcallback callback procedure invoked slider value changed note always get value slider uigetslidervalue really need use callback cases want take immediate action response slider changed additionally callback occurs user released mouse user dragging slider sliders like controls added one another starting top control area double uigetslidervalue uislider slider returns current value slider void uisetslidervalue uislider slider double sets value slider void uisetsliderparams uislider slider double min double max double current int decimal points sets various paramaters slider slider uislider modified min new minimum value slider minimum value must less current max values max maximum value slider maximum value must greater current min values current new current value slider show current value must min max inclusive decimal points number digits right decimal displayed reported valid ranges non negative integer see also uigetsliderparams obtaining current parameter set slider void uigetsliderparams uislider slider double min double max double current int decimal points get various parameters slider slider uislider read min pointer minimum value slider written max pointer maximum value slider written current pointer current value slider written decimal points pointer current number significant digits right decimal stored see also uisetsliderparams uimenu uimakemenu char menutitle function creates menu button user clicks button pop menu appear add items popup menu call uiaddmenuitem passing uimenu type returned function void uiaddmenuitem uimenu menu char menutext uimenucallback callback int userdata add menu item menu menu created uimakemenu menu menu menu item appended menu value returned uimakemenu menutext label associated menu item user clicks menu button reveal popup menu text user see callback callback routine invoked user selects menu item callback routine used pass null argument userdata optional user data associated menu item callback invoked response user activity data passed callback routine although userdata int still useful typically id menu item created used userdata one callback routine used entire menu callback routine would process argument userdata switch case break block void uisettext char text sets contents text field bottom window text text displayed pass null text displayed function effect uiinitwindows called uihastext option char uigettext void returns pointer string text field bottom window pointer points memory allocated program call uifreetext memory won freed ll memory leak void uifreetext char frees memory allocated libui uigettext called without freeing call memory leak image routines image uinewimage int width int height argtype type returns newly allocated image width width new image height height new image type type image either scalar grayscale image vector color image note routine allocates memory image need call uideleteimage free memory re done image void uideleteimage image im frees memory allocated image image uiopenimage char filename int width int height opens rgb file reads memory returns pointer new image filename name rgb file opened width desired width new image rgb image disk different width image scaled height desired height new image rgb image disk different height image scaled file cannot opened error occurs uiopenimage returns null images opened created vector images done image sure call uicloseimage properly free memory associated image void uisaveimage image image char filename save image disk rgb file image pointer image saved image either vector scalar filename name file save image name end rgb quotes rgb extention added pixel scaling disabled uisaveimage must call uiscalepixelvalues reenable scaling desired void uicloseimage image im close image im opened uiopenimage int uiimagewidth image im int uiimageheight image im returns width height image argtype uiimagetype image im returns type image either scalar grayscale image vector color image void uisetscalarvalue image im int ix int iy real val sets grayscale intensity pixel image im image modify ix iy coordinates pixel whose color set val grayscale value pixel normalized void uisetvectorvalue image im int ix int iy vector val sets color pixel image im image modify ix iy coordinates pixel whose color set val color pixel vector first x component taken red value second y component taken green value third z component taken blue value values normalized real uigetscalarvalue image im int ix int iy returns gray value pixel im image ix iy coordinates pixel vector uigetvectorvalue image im int ix int iy returns color value pixel im image ix iy coordinates pixel unsigned long uigetpixelvalue image im int ix int iy returns color value pixel packed representation opengl familiar im image ix iy coordinates pixel return value function packed representation pixel color bit unsigned long returned looks like rrggbbaa red component upper bits green next blue next alpha lowest bits value used argument glcolor ub call unsigned long uigetpixeldata image im returns array pixel values call gldrawpixels understand im image get pixel data like calling uigetpixelvalue pixel image void uiscalepixelvalues image im uibool val specifies whether scale intensity values image retreiving pixel data using uigetpixelvalue uigetpixeldata im image val uitrue want enable pixel value scaling uifalse want disable void uisetscalefactor image im real val sets pixel scaling factor image im image set scaling factor val scale factor use generating pixel values image procedure sets constant scaling factor multiply value pixel querying pixel values drawing routines void uigetcolortableparams int start int size valid using indexed color mode main window sets start starting index color table size size table void uisetcolortableentry int float red float green float blue valid using indexed color mode main window sets one entry color table index set red green blue floating point values red green blue channels void uisetcolortable int start int length float data valid using indexed color mode main window sets set entries color table start starting index color table length number entries set data array data containing floating point values red green blue channels void uisetcolorindex uicolorindex index set current drawing color indexed color index index color map assign current color void uisetcolorrgb uicolorrgb color set current drawing color rgb color specified color rgb color assign current color int uigetblackpixel void returns color index produce black overlay plane int uigetwhitepixel void returns color index produce white overlay plane void uisetbackground void sets current drawing color window background color void uidrawline int x int y int x int y draws line two points must preceeded uisetcurrentwindow call must followed uiflush call x y first point x y second point void uisetdrawmode uidrawmode mode used specify drawing mode used drawing indexed color mode mode drawing ui xor specifies drawing xor mode ui copy specifies drawing standard draw mode void uidrawimage image im int x int y draws image given coordinates im pointer image memory x y coordinates draw image void uiflush signal draw queued objects immediately function miscellaneous routines void uisetidlecallback uiidlecallback idleproc defines idle procedure called periodically program nothing better may call uisetidlecallback anywhere program long uiinitwindows already called disable idle procedure procedure return true remove procedure work queue need call uisetidlecallback replace leave idle procedure work queue procedure return false idle procedures even empty ones consume large amounts system resources best leave disabled needed void uisettimercallback uitimercallback timerproc unsigned long interval like idle callback called defined interval milliseconds continually called callback procedure returns true removed event queue replace must call uisettimercallback void uiquit shuts interface library function never returns uiquit calls exit last statement void uipostfiledialog char title char filter uifileboxcallback okcallback presents file selection dialog title title dialog box filter optional filter filenames must satisfy order shown example c show files ending c okcallback callback procedure invoked user presses ok button dialog name selected file made available callback invoked pass null argument application calls uipostfiledialog file selection box presented uipostfiledialog call returns control application immediately dialog box still application notified ok button pressed via okcallback void uibusycursor int state int interruptable sets cursor watch useful user interface routine let user know current operation could take time state determines whether cursor changed watch changed back change watch use enable busy cursor change back default icon use disable busy cursor cursor set watch user interaction allowed additionally user interation queued interruptable variable currently used always set glossary callback procedure routine called interface library response action user presses button window becomes visible etc idle procedure routine called periodically interface library nothing else overlay plane drawing plane lies another drawing area whose image drawn top image beneath one color index typically specified transparent index clamp max min uiaddmenuitem uiaddslider uiaddtogglebutton uiaddwindow uiappoptions uibool uibusycursor uicallback uicloseimage uideleteimage uidirtywindow uidrawingplane uidrawimage uidrawline uiexposecallback uifileboxcallback uiflush uifreetext uigetblackpixel uigetcolortableparams uigetpixeldata uigetpixelvalue uigetsliderparams uigetscalarvalue uigetslidervalue uigettext uigettogglebuttonstate uigetuserdata uigetvectorvalue uigetwhitepixel uigetwindowsize uiidlecallback uiimagetype uiimagewidth uiinitwindows uimainloop uimakemenu uimapcoordinates uimouseaction uimousecallback uinewimage uiopenimage uipostfiledialog uiquit uisaveimage uiscalepixelvalues uisetbackground uisetcolorindex uisetcolorrgb uisetcolortable uisetcolortableentry uisetcontrolheight uisetcontrolwidth uisetcurrentwindow uisetdrawmode uisetidlecallback uisetmainwindowheight uisetmainwindowwidth uisetscalarvalue uisetscalefactor uisetsliderparams uisetslidervalue uisettextheight uisettimercallback uisettogglebuttonstate uisetuserdata uisetvectorvalue uislider uitimercallback uitogglebutton uiwindow back cs home page mtwong cs washington edu last modified mar