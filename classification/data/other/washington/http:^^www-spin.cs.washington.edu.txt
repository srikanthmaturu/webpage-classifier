mime version server spin content type text html spin web server spin cs washington edu welcome spin web server running spin connected machine university washington running real live spin operating system web server runs dynamically linked extension top spin kernel relies set system extensions notably disk extents unix like sockets file system networking support figure shows system configured several extensions used web server server structured three level cache memory fast extent based file system remote nfs server miss memory cache local extent file system queried miss files fetched remote nfs server structure allows us optimize disk layout fast contiguous reads web server exports commands send running spin os show information number threads set instantiated domains state heap example information spin please read spin operating system spin extensible operating system kernel supports dynamic adaptation system interfaces implementations direct application control still maintaining system integrity inter application isolation spin allows applications load code kernel runtime runs kernel extension code access hardware operating systems services almost overhead basically procedure call data passed reference rather copied spin kernel provides core set interfaces capabilities basic resources used collections extensions implement general system services address spaces ipc threads networking extension code kernel written type safe language modula property type safety prevents extensions crashing system attempting manipulate arbitrary pieces code data spin runs dec alpha workstations re using write specialized applications network video systems well supporting general purpose unix programs quick results structure allows programs extend operating system services low overhead example spin running mhz alpha application handle recover page fault microseconds takes microseconds create new thread control execute terminate synchronize termination fork join protected procedure call another extension kernel function takes microseconds cross machine rpc application application ethernet takes microseconds atm really old adapters takes less microseconds operations mach digital unix take times longer hardware time see benchmarks page save effort recent reports papers extensibility safety performance spin operating system design implementation performance paper appeared th sosp extensible protocol architecture application specific networking design implementation performance paper appeared usenix winter conference writing operating system using modula describes experiences using modula build high performance extensible system makes clear distinction language implementation language support extensible operating systems ve pretty happy m ve deal shortcomings order use language safe extensible operating system paper describes ve addressed shortcomings safe dynamic linking extensible operating system describes dynamic linker use load code kernel key point ability create manage linkable name spaces describe interfaces collections interfaces language runtime support dynamic interposition system code describes kernel internal communication extension facilities shows use dynamic code generation improve performance critical kernel service information paper trail project reports talks papers etc project members benchmarks interested bottom line go modula information modula arpa project overview executive summary regular reports friends ve gotten lot assistance academia industry project page says re involved related projects pointers extensible systems projects internal documentation latest status project members mascot re encouraged many people decided adopt mascot page maintained brian bershad