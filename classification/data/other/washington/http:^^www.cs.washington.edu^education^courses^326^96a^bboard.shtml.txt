date tue dec gmt server ncsa content type text html cse bboard mail log cse data structures bboard mail log autumn page contains log mail sent class mailing list cse cs use list announcements general interest class students also feel free use ask questions post information initiate discussions general interest class questions comments general interest instead directed ta dewey cs instructor tompa cs administrative requests concerning mailing list add delete address change requests addressed cse request cs need send initial subscribe request cse request everyone registered course automatically initial mailing list index messages latest message tuesday dec pst sep tompa cs testing mail log oct tompa cs cse mailing list oct tompa cs re learning unix g oct dewey cs unix tips oct tompa cs reading assignments oct dewey cs big o vs little o oct tompa cs chapter oct aten u locative translation table oct rafiq cs joke damn clock oct tompa cs hw oct tompa cs omega oct tompa cs hw oct tompa cs hw oct tompa cs absence next week oct tompa cs hw top makeemptyx oct chapman wilburs makefile oct tompa cs reading chapters algorit oct tompa cs hw stack queue items oct dewey cs re makefile oct dewey cs homework guidelines oct dewey cs homework question oct wcoyote u re makefile oct dewey cs re negative numbers oct re hw stack re hw stack queue items fwd oct dewey cs re iostream h oct dewey cs homework questions oct re input re input stream oct dewey cs re homework questions oct dewey cs re divide oct dewey cs new submission guidelines oct re submission re submission oct dewey cs general announcements oct dewey cs re input stream oct dewey cs re cerr redirecting files oct dewey cs due date testing program oct dewey cs re due date testing program oct dewey cs re due date testing program oct dewey cs re due date testing program oct tompa cs chapter reading oct tompa cs scaling homework totals oct dewey cs office hours oct tompa cs hw oct dcao cs re hw oct tompa cs re hw oct tompa cs re hw oct tompa cs clarification b trees oct tompa cs splay trees oct tompa cs chapter midterm oct tompa cs related issues oct tompa cs midterm questions nov tompa cs mail weekend nov tompa cs hw nov tompa cs hw midterm nov tompa cs money tree analysis nov tompa cs midterm solutions nov dewey cs homework averages nov tompa cs hw display nov tompa cs section reading nov tompa cs hw display nov tompa cs often need print tree nov dewey cs homework turnin driver nov dewey cs submission guidelines nov dewey cs homework due time nov dewey cs re concat nov tompa cs using hw driver recap yesterday nov tompa cs preparing next lecture nov tompa cs part hw nov jhall cs anyone help nov wcoyote u re anyone help nov bone cs re anyone help nov rafiq cs spaces acceptable nov dewey cs re acceptable input nov tompa cs re spaces acceptab nov rafiq cs problems turnin nov rafiq cs re problems turnin nov dewey cs replies homework nov tompa cs reading section nov tompa cs readings heap applications nov tompa cs background reading graphs nov dewey cs office hours appointment nov tompa cs hw dec tompa cs graph reading dec tompa cs final exam dec tompa cs character frequencies hw dec tompa cs clarifications hw dec tompa cs hw format frequency file dec dewey cs hw driver dec dewey cs important homework submission proced dec tompa cs hw interesting efficiency idea dec tompa cs office hour monday dec dewey cs re eof dec dewey cs re hw dec dewey cs re thought makefile dec dewey cs re separate classbitstream file dec dhphan cs re hw dec dewey cs clarification readsomestuff ex dec dewey cs re make submit test dec dewey cs re multiply defined dec dewey cs sample input dec dewey cs re huffman tree dec aten cs re sample input dec wcoyote u re sample input dec tompa cs encoding length dec re sample inpu re sample input dec eugene cs re sample input dec tompa cs dec dewey cs optimal comparison dec tompa cs bits dec aten cs script bomb dec rafiq cs input char dec jhall u problem files dec shafer cs re problem files dec jhall u re problem files dec dougbeal cs re problem files dec aten cs re problem files dec aten cs re input char dec hori cs re optimal comparison dec rafiq cs re input char dec rafiq cs re optimal comparison dec eugene cs re optimal comparison dec dougbeal cs compiling assignem messages cse geoduck subject testing mail log date thu sep pdt martin tompa tompa geoduck cs washington edu cse cs subject cse mailing list date thu oct pdt martin tompa tompa geoduck cs washington edu established mailing list cse cs class announcements discussion mail sent list also automatically logged course web http www cs washington edu education courses read either place feel free use mailing list ask questions post information initiate discussions general interest class questions comments general interest instead directed ta dewey cs instructor tompa cs administrative requests concerning mailing list add delete address change requests addressed cse request cs need send initial subscribe request cse request everyone receiving mail already initial mailing list martin cse geoduck subject re learning unix g date thu oct pdt martin tompa tompa geoduck cs washington edu indicated questionnaire know unix half never used g compiler ll using spend little time getting comfortable unix link home page called lab tech notes particular tn called notes new unix users looks like pretty good summary basics g look directory cse courses cse f sample project project includes readme makefile source files couple input files copy directory following steps grizzly cd brings back home directory grizzly mkdir project creates new directory name project grizzly cp cse courses cse f sample project project copies files cse courses cse examples sample project directory done look files particular readme makefile try compiling running project cse cs subject unix tips date fri oct pdt brian k dewey dewey scoter cs washington edu tips unix systems one classmates guarantees work particular find xemacs may simply way computer configured thanks rafiq providing us forwarded message please check mail cse cs v attached aliases file alias xemacs uns bin xemacs following prints single sided sieg printer alias print lpr pps folowing prints double sided sieg printer alias print enscript r h g pps rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr rr r r ffffff qq r r f q q r r f q q rr fffff q q r r aaaaaaaaa f q qq q r r f qq qq q r r f qq qq rafiq rahim rafiq cs washington edu http www cs washington edu homes rafiq nice day rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr end forwarded message cse geoduck subject reading assignments date fri oct pdt martin tompa tompa geoduck cs washington edu today lecture asked read sections monday lecture d like read sections re going pretty fast right largely review promise ll slow get new material cse cs subject big o vs little o date fri oct pdt brian k dewey dewey scoter cs washington edu quiz section thursday someone asked difference big o little o notation since definitions book well since hadn seen material needed go back look book explaination answering turns definitions given book similar identical big o notation used measure growth rates functions constants c n f n cg n n n f n o g n would mean f n grows roughly like g n definition little o f n o g n constants c exists constant n c f n cg n n n c constants c key difference two definitions little o doesn measure growth rates instead used indicate one function case f n dominated another function g n see difference consider f n o f n f n e functions grow similarly f n o f n e function dominates isn immediately clear try prove f n o f n remember definition requires check constants c including constant c brian cse geoduck subject chapter date mon oct pdt martin tompa tompa geoduck cs washington edu wednesday lecture please read pages date mon oct pdt jason aten aten u washington edu cse geoduck cs washington edu subject locative translation table hey cse ers based appendix one come locative notation c c conversion table thus read expression book translate c code helps understand notation p p locatives think double pointer type e g node c c c c common regular variables locatives maybe fact likely node types exhaustive conversions interpretation table appendix locative notation c c equivalent c c c c c p c p p c p c p p p p p c p c p p p p c c c c c p c p next p p next note result expression generally c p hope helps way could sure writing right thing write c first translate locative best wishes jason jason aten university washington seattle wa aten u washington edu date tue oct pdt rafiq rahim rafiq cs washington edu cse cs washington edu subject joke damn clock wife complains wall clock almost killed mother today fell seconds got couch husband mumbles damn clock always slow rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr rr r r ffffff qq r r f q q r r f q q rr fffff q q r r aaaaaaaaa f q qq q r r f qq qq q r r f qq qq rafiq rahim rafiq cs washington edu http www cs washington edu homes rafiq nice day rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr cse geoduck subject hw date tue oct pdt martin tompa tompa geoduck cs washington edu questions similar one seems two ways might go showing n theta f n provide constants c d cf n n df n sufficiently large n use rule sums rule products instance loop bound running time loop body bound number iterations apply rule products forwarded message date tue oct tompa cs washington edu subject assignment cse regards problems assignment find big theta code fragments ta said justification would involve finding decent running time function n code solving big o big omega usual mathematical way gave examples class expecting solutions end forwarded message cse geoduck subject omega date tue oct pdt martin tompa tompa geoduck cs washington edu forwarded message date tue oct martin tompa tompa cs washington edu subject question still clear omega notation om could please give explanation also apply sum rule om example class nlogn n om n yes om n om nlogn yes could please explain answer st rd cases yes end forwarded message st yes nlogn n n n choose c n apply definition omega rd yes nlogn n nlogn n choose constants gave different explanation class one really salient explanation something like apply function growing slower n far sum rule omega yes true apply prove good exercise proof somewhat different proof sum rule o cse geoduck subject hw date wed oct pdt martin tompa tompa geoduck cs washington edu forwarded message date tue oct martin tompa tompa geoduck cs washington edu dewey cs washington ed u subject problem filling table see get answer n log n see way solve n could estimate answer time period end forwarded message know analytical way solve n case either use calculator simple program find greatest n cse geoduck subject hw date thu oct pdt martin tompa tompa geoduck cs washington edu forwarded message date thu oct martin tompa tompa cs washington edu subject hw algorithm shows linked list implementation stack particular interest uses locative data type required use locatives implementation stack also may confused book contiguous memory implementation queue seems imply fixed maximum size queue right queue dynamic end forwarded message algorithm using locatives simulate call reference simply making parameters call reference suffice m thinking required handle memory leaks stack implementation yes contiguous memory implementation stacks queues requires predetermine maximum number entries ever needed chief disadvantage linked implementation chief advantage doesn need pointers hw make maximum queue size let also remind makefile make life easier required turn cse geoduck subject re learning unix g date thu oct pdt martin tompa tompa geoduck cs washington edu indicated questionnaire know unix half never used g compiler ll using spend little time getting comfortable unix link home page called lab tech notes particular tn called notes new unix users looks like pretty good summary basics g look directory cse courses cse f sample project project includes readme makefile source files couple input files copy directory following steps grizzly cd brings back home directory grizzly mkdir project creates new directory name project grizzly cp cse courses cse f sample project project copies files cse courses cse examples sample project directory done look files particular readme makefile try compiling running project cse geoduck subject absence next week date fri oct pdt martin tompa tompa geoduck cs washington edu going conference next monday wednesday october ll leave brian capable hands days continue lectures dictionaries monday wednesday ll pick friday left office hour monday canceled questions d like discuss leave free time today october october sure send urgent mail questions hw dewey cs rather like cc won reading mail away cse geoduck subject hw top makeemptyx date fri oct pdt martin tompa tompa geoduck cs washington edu forwarded message date thu oct tompa cs washington edu subject top makeemptyx intended uses top makeemptyx see user would need top stack class contains private variable called m top use pop book uses function top pop function far makeemptyx goes would user make use makeemptyx stack queue create new empty stack queue declare cllstack mystack crbqueue myqueue expected make use makeemptyx destructors classes seems like extra layer function calls end forwarded message possible client won need top hw say users general might need order inspect top stack without removing makeemptystack makeemptyqueue intended destructors rather constructors operations create return brand new empty stack queue date fri oct randy chapman chapman wilbursoft com cse cs washington edu subject makefile noticed makefile sample project doesn properly recompile headers change relinks really quite useless task thoughts would following added program objects headers right line program objects sources headers note might needed objects line lower makes quite explicit destination randy cse geoduck subject reading chapters algorithm date fri oct pdt martin tompa tompa geoduck cs washington edu monday lecture please read section wednesday lecture please read section get algorithm beware ve seen versions textbook different algorithm two fine interchangeable purposes one line else lc rc p lambda lc q lc p p q simply cross line makes sense since q uninitialized cse geoduck subject hw stack queue items date fri oct pdt martin tompa tompa geoduck cs washington edu let clarify expect want stack queue items hw possibly simplest solution item record consisting three fields int char boolean value boolean indicates whether appropriate value int char variations possible union type class cse cs washington edu subject re makefile reply message fri oct pdt zm wilbursoft com date fri oct pdt brian k dewey dewey scoter cs washington edu thought d add note two clarification randy message people might familiar makefile works program make uses makefile determine parts project depend parts example randy modification objects headers tells make program objects o files depend upon headers h files make program notices h files newer o files attempt rebuild o files usually want happen randy pointed bkd cse cs subject homework guidelines date sat oct pdt brian k dewey dewey scoter cs washington edu guidelines homework driver program m including simple driver program use functions infix postfix postfix evaluate print result single arithmatic expression file assumes ve named queue class queue instructs infix postfix get data standard input important let write scripts test programs file include iostream h class queue queue infix postfix istream int postfix evaluate queue main int result queue q q infix postfix cin result postfix evaluate q cout result result endl permitted modifications file may rename queue type match whatever called data type b program specs said infix postfix returns queue postfix evaluate takes queue parameter used pointers queues prototypes functions used reference parameters e queue may modify driver appropriate get program compile link c method print contents queue included program specs technically speaking print operation defined upon queue however decide include function debugging purposes feel free modify driver print contents queue may help assigning partial credit generate correct results inputs since able see generating proper intermediate results submission guidelines turn programming assignment need turn hard copy class also turn electronically files hard copy turn hard copy source files hard copy readme file see details electronic copy turn following short file called readme file tell program complete isn complete tell far got program works bugs tell motivation almost homeworks run programs program doesn work ll spend time trying figure well works unfortuanetly quickly see wrong readme file telling isn working ll guess estimate far got tell better ll estimate necessary source files h cc makefile able compile program typing make command line makefile change name executable hw exe hw words change program line program hw exe please turn executable turn o files take lot room disk want compile stuff anyway turn electronic copy suppose files directory called hw ready turn e type ls command line get grizzly ls cse hw suppose section ab would type turnin c cse ab p hw hw example grizzly turnin c cse ab p hw hw compressing submitted files please wait files submitted cse hw grading grizzly details please put name source files please use comments least comment per function telling piece code completely obvious works put comment explaining going still waiting class registered electronic turnin server please attempt turn program receive broadcast message saying everything initialized hopefully monday cse cs subject homework question date sat oct pdt brian k dewey dewey scoter cs washington edu input stream contain digit numbers receive full credit program must able handle numbers one digit receive partial credit handle single digit numbers bkd date sat oct pdt alan wilson wcoyote u washington edu cse cs washington edu subject re makefile really want spiffy makefile update dependencies automatically make depend add lines end makefile probably want move mf definition top makefile set appropriately cut name makefile mf makefile snipped cse makefile dan fasulo revised juan alemany depend echo updating dependencies echo sources mf sed n sudden death p echo echo dependencies generated date echo sources compiler mm cflags echo done mf new mv mf mf last mv mf new mf everything line subject sudden death cut fri oct brian k dewey wrote thought d add note two clarification randy message people might familiar makefile works program make uses makefile determine parts project depend parts example randy modification objects headers tells make program objects o files depend upon headers h files make program notices h files newer o files attempt rebuild o files usually want happen randy pointed cse cs subject re negative numbers reply message sat oct pdt pine osf saul u washington edu date mon oct pdt brian k dewey dewey scoter cs washington edu homework questions able handle negative numbers homework assignment program parse negative numbers e won give something form however handle negative numbers show calculations e g return result valid expression always spaces tokens make things easier write o routines ll make sure test input contains spaces every token also noticed driver program delete q end postfix evaluate course isn technically necessary end program seems like good practice oops mistake yes bad form driver program delete q end y want add delete q end program please bkd cse cs subject re hw stack queue items fwd reply message mon oct pdt pine homer u washington edu mime version content type text plain charset us ascii date mon oct pdt brian k dewey dewey scoter cs washington edu mean deal fractional parts answers etc evaluate keep pushing results onto stack popping operands enter something like implicitly cast result first operation int pushing onto stack handle fractional results treat integer divide operator e div bkd cse cs subject re iostream h reply message sun oct pdt pine ult b wolf cs washington edu date mon oct pdt brian k dewey dewey scoter cs washington edu wrote small main program test stuff include iostream eh compile compiler complained find librar y specify path iostream h default par need change gcc find right path library iostream h default include path g however probably isn path gcc get error make sure re using g compile program bkd cse cs cc cse scoter cs washington edu subject homework questions reply message mon oct pdt pine ult d lynx cs washington edu date mon oct pdt brian k dewey dewey scoter cs washington edu think destructor necessary queue class understanding destructor necessary dynamic allocation data isn didn make one depends queue array stores pointers structures structures dynamically allocated elsewhere program queue destructor deallocates structures pointed valid entries queue e queue empty destructor called delete thing x elements left delete x records errors handled assignment little bit vague m handled errors fairly brute working manner sometimes however error message given stack empty though clearly user entered bad input sufficient report stack empty user example enter input clearly invalid infix postfix algorithm works stack indicated empty guideline m going use program dumps core didn handle error gracefully familiar unix core dump occurs program executes invalid instruction e g try execute data invalid memory reference usually caused mucking null pointers long print message indicating error occured tell truth care message says invalid operator attempted pop empty stack aliens invading mars quick run long know error program terminates without coredump bkd cse cs cc dewey scoter cs washington edu subject re input stream reply message mon oct pdt pine ult grizzly cs washington edu mime version content type text plain charset us ascii date mon oct pdt brian k dewey dewey scoter cs washington edu test program would entering input stream keybd could explain would testing program write script redirect files program redirect output another file script look something like hw exe input dat output dat repeated different input files ll compare output expected get bkd cse cs cc dewey scoter cs washington edu subject re homework questions reply message mon oct pdt pine ult c lynx cs washington edu date mon oct pdt brian k dewey dewey scoter cs washington edu hi see driver queue main create instance queue main dynamically create instance queue infix postfix originally intended infix postfix create queue return pointer doesn case several people asked create queue main pass queue infix postfix reference parameter fine ways better way things use either method bkd cse cs subject re divide reply message mon oct pdt pine ult lynx cs washington edu date tue oct pdt brian k dewey dewey scoter cs washington edu worry divide zero excellent question technically want avoid program dumps core standard error handling detect divide zero won use test inputs divide zero would result bkd cse cs subject new submission guidelines date tue oct pdt brian k dewey dewey scoter cs washington edu ve belatedly decided simple e mail easier use turnin program please e mail makefile readme file source code electronic submission couple ways easily send multiple files instructional workstations shar command available following command work shar makefile readme cc h mail dewey cs lengthy command effective tar cf makefile readme cc h uuencode userid tar mail dewey cs substitute userid userid enter command one line else fails use cat makefile readme cc h mail dewey cs cut paste files favorite interactive mail browser however d prefer use last options since means must manually reconstruct files single mail message sorry change submission guidelines late assignment e mail questions problems bkd cse cs subject re submission reply message tue oct pdt pine ult b grizzly cs washington edu mime version content type text plain charset us ascii date tue oct pdt brian k dewey dewey scoter cs washington edu hi submitted files via mail wondering find bug program correct resubmit like turnin may resubmit often like bkd cse cs subject general announcements date tue oct pdt brian k dewey dewey scoter cs washington edu ll haunting cubicles th floor sieg afternoon ll available questions time homework graded returned quiz section thursday bkd cse cs subject re input stream reply message tue oct pdt pine osf c saul u washington edu date tue oct pdt brian k dewey dewey scoter cs washington edu hi brian know kind late thought might want pass info even though going redirect input file people testing programs might try use command line word warning people use standard way taking things input stream e cin input warned infinite loop enter input command line unix environment caused least one student certain amount consternation anybody else runs problem simulate end file command line typing control d bkd cse cs subject re cerr redirecting files reply message tue oct pdt pine osf d saul u washington edu date tue oct pdt brian k dewey dewey scoter cs washington edu another student pointed use cerr error reporting get redirected file output avoid cerr use cout instead re using cerr print error messages worry fact slightly better programming practice bkd cse cs subject due date testing program date tue oct pdt brian k dewey dewey scoter cs washington edu try get program done class tomorrow however ll accept electronic submissions midnight give corresponding hardcopy quiz section testing program might want consider following cases user enters single number result make sure operators work correctly used result result result result handle parenthesis properly result result errors attempting examine top empty stack cse cs subject re due date testing program reply message tue oct pdt pine osf g saul u washington edu date tue oct pdt brian k dewey dewey scoter cs washington edu errors attempting examine top empty stack hide level error user checking see stack empty use top pop case evaluation function would cerr bad input ok stack handle errors correctly evaluation function never attempts top pop empty stack true queue evaluation way handle error long handled good bkd cse cs subject re due date testing program reply message tue oct pdt pine osf saul u washington edu date wed oct pdt brian k dewey dewey scoter cs washington edu program supposed handle input like ad fasd think program enters infinite loop spitting errors bad hmm would suggest terminating program encounter error situation prevents loop problem wouldn worry assignment though important thing ve detected error input user hopefully smart enough hit c terminate program sees error messages filling screen bkd cse cs subject re due date testing program reply message wed oct pdt zm wilbursoft com date wed oct pdt brian k dewey dewey scoter cs washington edu clearly free allocated memory exit error worry freeing memory error terminate program error condition bkd cse geoduck subject chapter reading date mon oct pdt martin tompa tompa geoduck cs washington edu wednesday lecture please read handout avltreedeletemin begin reading section finish reading friday lecture cse geoduck subject scaling homework totals date tue oct pdt martin tompa tompa geoduck cs washington edu purely administrative adjustment d like make hw absolutely effect final grade d like future homeworks starting hw total vicinity order make hw comparable re going scale factor total number points hw instead grade hw half whatever says paper said effect grade homework worth amount others total homework still account final grade announced first lecture cse cs subject office hours date wed oct brian k dewey dewey cs washington edu nuts know mind afternoon forgot office hour lame attempt compensate ll bend backwards available appointment next days answer questions sorry cse geoduck subject hw date thu oct pdt martin tompa tompa geoduck cs washington edu students gotten stuck last part problem need know formula geometric series page text understand memorize top half formula case c comes time please show intermediate trees show final tree get wrong ll lose lots points would good idea show trees one insertion rotation date fri oct pdt dung cao dcao cs washington edu martin tompa tompa geoduck cs washington edu cc cse geoduck subject re hw problem homework use fact without proving number leave full binary tree n thanks sugesstion dung cao dcao cs washington edu cc cse geoduck subject re hw reply message fri oct pine ult b lynx cs washington edu date fri oct pdt martin tompa tompa geoduck cs washington edu dung cao dcao cs washington edu cc cse geoduck subject re hw reply message fri oct pine ult b lynx cs washington edu date sun oct pst martin tompa tompa geoduck cs washington edu suffered network problems friday body following message doesn look like ever came along header d better use fact true let lesson value proving things true using first thing probably look definition full forwarded message date fri oct dung cao dcao cs washington edu martin tompa tompa geoduck cs washington edu cc cse geoduck subject re hw problem homework use fact without proving number leave full binary tree n thanks sugesstion end forwarded message cse geoduck subject clarification b trees date mon oct pst martin tompa tompa geoduck cs washington edu student office hour today asked question pointed neglected say something important b trees may confused several b tree node k keys k children k keys sorted node k children correspond places descendent key could possibly occur less k keys first second keys second third keys k st kth keys greater k keys given organization lookup algorithm pretty obvious see understand goes cse geoduck subject splay trees date mon oct pst martin tompa tompa geoduck cs washington edu tricky question mull wednesday lecture defining splay case ii said straight path p grandparent rotate first around grandparent around parent order rotate first around parent around grandparent would still move p two levels want accomplish hint consider case splay tree single path keys n order root splayed key n described cse geoduck subject chapter midterm date wed oct pst martin tompa tompa geoduck cs washington edu next reading assignment read sections may possibly get friday midterm monday cover everything including friday lecture closed book closed notes closed calculator room exam answers need blue book need pencils good understanding ve done far cse geoduck subject related issues date thu oct pst martin tompa tompa geoduck cs washington edu make office hours m always happy make appointment meet another time feel office hours times m willing answer questions love material m really interested helping learn re trouble although answer almost anything m happiest call martin quite manage second choice oh captain captain cse geoduck subject midterm questions date thu oct pst martin tompa tompa geoduck cs washington edu forwarded message date thu oct tompa cs subject midterm hi going web pages couldn find midterm exam previous qtrs wondering whether would possible give us sample midterm questions get idea kind questions expect midterm end forwarded message ve tried make homework exercise consider important topics re comfortable answering sorts questions asked homework ll good shape midterm course won asking anything time consuming like long proof designing complicated algorithm cse geoduck subject mail weekend date fri nov pst martin tompa tompa geoduck cs washington edu forwarded message date fri nov martin tompa tompa cs washington edu subject re related issues oh captain captain willing able answer questions related material ll reviewing midterm email weekend know something imposition end forwarded message ll try remember log weekend answer mail won make promises questions arise weekend may increase chance getting timely answer sending cc brian m promising behalf ll read mail weekend chances better re brave send question cse one smart colleagues help multiplying chances really one reasons mailing list cse geoduck subject hw date fri nov pst martin tompa tompa geoduck cs washington edu deletemin handout long section decreased end algorithm handles various left rotations rebalancing write algorithm avltreedelete first inclination may copies long code left rotations mirror image right rotations good programming style know since later debugging correction one copies might get done copies would much nicer write subroutine symbolically call times subroutine might take among parameters d d means right subtree decreased height d means left subtree decreased height cse geoduck subject hw midterm date fri nov pst martin tompa tompa geoduck cs washington edu announced class today hw due wednesday re responsible material monday midterm gives extra days polishing hw writeup won ask anything difficult splay tree analysis responsible understanding splays dictionary operations terms splays certainly won ask questions require understanding proofs analysis lemmas cse geoduck subject money tree analysis date sat nov pst martin tompa tompa geoduck cs washington edu forwarded message date fri nov tompa cs subject money tree analysis hi mostly understood tree analysis class today however wasn obvious came constant term r p r p know gave explanation wasn quite able grasp could please explain presence sorry question asking trivial end forwarded message question trivial ask one particular far trivial rather subtle saw r p r p enough reinstate money invariant everywhere needed pay rotation r p r p saw get one nodes assume r p r p case another r p r p could supply additional least r p r p together enough case iii case showed read cases book see case requires r p r p case ii requires r p r p comes case ii cse geoduck subject midterm solutions date mon nov pst martin tompa tompa geoduck cs washington edu couple students already pointed made mistake solution right child hard imagine getting problem wrong goes class cse cs subject homework averages date sun nov brian k dewey dewey cs washington edu average grades first three homeworks homework homework homework average three homeworks cse geoduck subject hw display date mon nov pst martin tompa tompa geoduck cs washington edu forwarded message date sun nov martin tompa tompa cs washington edu cc brian k dewey dewey cs washington edu subject hw display trees using outline form figure b also need somehow indicate whether node left child right child would like see suggestions end forwarded message yes need make output unambiguous leaving blank line missing child would sufficient use outline form cse geoduck subject section reading date mon nov pst martin tompa tompa geoduck cs washington edu wednesday please read pages cse geoduck subject hw display date tue nov pst martin tompa tompa geoduck cs washington edu forwarded message date mon nov tompa cs subject display hi right display procedure prints tree outline form okay need explicit end forwarded message let turn question around showed display could tell binary tree let ignore fact binary search tree answer would tell whether left right child true answer yes knowing binary search tree must left child since d like able imagine binary tree display without calculations case would nice display worked binary trees minimum display could help looking like explicitly putting indented dashes make clearer blank lines children empty cse geoduck subject often need print tree date tue nov pst martin tompa tompa geoduck cs washington edu forwarded message date tue nov dewey cs washington edu tompa cs washington edu subject often need print tree need print trees say every part splay dictionary operation end forwarded message fine print every dictionary operation brian working driver hw m yet sure though displaying fit driver ll post something shortly meantime sure operations working properly cse cs subject homework turnin driver date tue nov pst brian k dewey dewey scoter cs washington edu submission guidelines next homework submit code via e mail forgotten submission instructions copy email sent homework couple ways easily send multiple files instructional workstations shar command available following command work shar makefile readme cc h mail dewey cs lengthy command effective tar cf makefile readme cc h uuencode userid tar mail dewey cs substitute userid userid enter command one line else fails use cat makefile readme cc h mail dewey cs cut paste files favorite interactive mail browser however d prefer use last options since means must manually reconstruct files single mail message want emphasize use last two options last resort problems using tar submission problems using tar command lynx grizzly wolf let know use following code main program modifications instructed include iostream h typedef int boolean const int false const int true void show menu void cout choices endl cout insert endl cout d delete endl cout l lookup endl cout p print endl cout q quit endl cout please enter choice endl int main void boolean keep going true char choice cout cse autumn homework endl cout name martin tompa endl cout student number endl cout initializing dictionary endl add code initialize dictionary delete next line cout code initializing dictionary goes endl cout dictionary ready endl keep going show menu cin choice cin get consumes n typed choice switch choice case cout insert endl add code insert delete next line cout code insert goes endl break case d cout delete endl add code delete delete next line cout code delete goes endl break case l cout lookup endl add code lookup delete next line cout code lookup goes endl break case p cout print endl add code print tree delete next line cout code printing tree goes endl break case q cout goodbye endl keep going false break default cout recognize choice try endl good luck happy coding bkd cse cs subject submission guidelines date tue nov brian k dewey dewey cs washington edu submission guidelines next homework submit code via e mail forgotten submission instructions copy email sent homework couple ways easily send multiple files instructional workstations shar command available following command work shar makefile readme cc h mail dewey cs lengthy command effective tar cf makefile readme cc h uuencode userid tar mail dewey cs substitute userid userid enter command one line else fails use cat makefile readme cc h mail dewey cs cut paste files favorite interactive mail browser however d prefer use last options since means must manually reconstruct files single mail message want emphasize use last two options last resort problems using tar submission problems using tar command lynx grizzly wolf let know use following code main program modifications instructed include iostream h typedef int boolean const int false const int true void show menu void cout choices endl cout insert endl cout d delete endl cout l lookup endl cout p print endl cout q quit endl cout please enter choice endl int main void boolean keep going true char choice cout cse autumn homework endl cout name martin tompa endl cout student number endl cout initializing dictionary endl add code initialize dictionary delete next line cout code initializing dictionary goes endl cout dictionary ready endl keep going show menu cin choice cin get consumes n typed choice switch choice case cout insert endl add code insert delete next line cout code insert goes endl break case d cout delete endl add code delete delete next line cout code delete goes endl break case l cout lookup endl add code lookup delete next line cout code lookup goes endl break case p cout print endl add code print tree delete next line cout code printing tree goes endl break case q cout goodbye endl keep going false break default cout recognize choice try endl good luck happy coding bkd sion guidelines next homework submit code via e mail forgotten submission instructions copy email sent homework couple ways easily send multiple files instructional workstations shar command available following command work shar makefile readme cc h mail dewey cs lengthy command effective tar cf makefile readme cc h uuencode userid tar mail dewey cs substitute userid userid enter command one line else fails use cat makefile readme cc h mail dewey cs cut paste files favorite interactive mail browser however d prefer use last options since means must manually reconstruct files single mail message want emphasize use last two options last resort problems using tar submission problems using tar command lynx grizzly wolf let know use following code main program modifications instructed include iostream h typedef int boolean const int false const int true void show menu void cout choices endl cout insert endl cout d delete endl cout l lookup endl cout p print endl cout q quit endl cout please enter choice endl int main void boolean keep going true char choice cout cse autumn homework endl cout name martin tompa endl cout student number endl cout initializing dictionary endl add code initialize dictionary delete next line cout code initializing dictionary goes endl cout dictionary ready endl keep going show menu cin choice cin get consumes n typed choice switch choice case cout insert endl add code insert delete next line cout code insert goes endl break case d cout delete endl add code delete delete next line cout code delete goes endl break case l cout lookup endl add code lookup delete next line cout code lookup goes endl break case p cout print endl add code print tree delete next line cout code printing tree goes endl break case q cout goodbye endl keep going false break default cout recognize choice try endl good luck happy coding bkd cse cs subject homework due time date wed nov brian k dewey dewey cs washington edu brought attention nowhere mentioned friday program due go ahead make midnight friday bkd cse cs subject re concat reply message wed nov pst zm wilbursoft com date wed nov brian k dewey dewey cs washington edu provide separate concat function used one place simpler matter putting directly delete code fine though one could argue separate function principle bkd cse geoduck subject using hw driver recap yesterday lecture date thu nov pst martin tompa tompa geoduck cs washington edu recap said yesterday lecture using hw driver place driver says instance add code lookup delete next line add look roughly like prompt read input key k call function lookup k call function display neither read display belong inside dictionary operations cse geoduck subject preparing next lecture date thu nov pst martin tompa tompa geoduck cs washington edu addition reading asked section order understand proof universal classes hash functions need comfortable following notions discrete math modular arithmetic m sure understand mod binary operator called c also comfortable part binary relation x y mod n lines instead key means x mod n y mod n equivalently x y divisible n injection function f d c injective iff f x f y implies x y surjection onto function f d c surjective iff every c c d d f d c bijection onto function cse geoduck subject part hw date thu nov pst martin tompa tompa geoduck cs washington edu students asked m looking part hw report look something like sequence operations resulted splay tree long path splay tree following operations deepest nodes trees resulted operations date thu nov pst jenna hall jhall cs washington edu cse cs subject anyone help trouble program trying access null pointers trying check certain rc lc null functions avoid trying things null pointers problem checking pointer null get segmentation fault looked pointer happens null program crashes checked pointer need know check pointers null without crashing program right example root lc lc root null something hope understandable hope someone help thanks much jenna date thu nov pst alan wilson wcoyote u washington edu jenna hall jhall cs washington edu cc cse cs washington edu subject re anyone help checking value pointer never cause segv dereferencing bad pointer null certainly thing could wrong example bad root pointer probably null sure root valid alan root lc lc root null thu nov jenna hall wrote trouble program trying access null pointers trying check certain rc lc null functions avoid trying things null pointers problem checking pointer null get segmentation fault looked pointer happens null program crashes checked pointer need know check pointers null without crashing program right example root lc lc root null something hope understandable hope someone help thanks much jenna alan mind going nowhere long interesting path ronald mabbitt date thu nov pst nicholas bone bone cs washington edu jenna hall jhall cs washington edu cc cse cs subject re anyone help thu nov jenna hall wrote root lc lc root null tried explicitly checking lc null try root lc null lc root null hope helps nic date fri nov pst rafiq rahim rafiq cs washington edu brian k dewey dewey cs washington edu cc cse cs washington edu subject spaces acceptable input hi much error checking required far code works space int space accepts int int accepts char int doesnot accept int char doesnot accept int space int doesnot accept rafiq rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr rr r r ffffff qq r r f q q r r f q q rr fffff q q r r aaaaaaaaa f q qq q r r f qq qq q r r f qq qq rafiq rahim rafiq cs washington edu http www cs washington edu homes rafiq nice day rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr cse cs subject re acceptable input reply message fri nov pst pine ult grizzly cs washington edu date fri nov brian k dewey dewey cs washington edu somebody asked one previous mail whether followed spaces acceptable input since integer followed spaces tell first glance difference computer string contains number different string lacks trailing spaces person doesn see doesn care difference say one strings acceptable input isn confuse people trying use program always allow leading trailing whitespace getting input human bkd cse geoduck subject re spaces acceptable input date fri nov pst martin tompa tompa geoduck cs washington edu long accept means program signals error gracefully e doesn crash hang seems like ve done right sorts things forwarded message date fri nov rafiq rahim rafiq cs washington edu brian k dewey dewey cs washington edu cc cse cs washington edu subject spaces acceptable input hi much error checking required far code works space int space accepts int int accepts char int doesnot accept int char doesnot accept int space int doesnot accept rafiq rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr rr r r ffffff qq r r f q q r r f q q rr fffff q q r r aaaaaaaaa f q qq q r r f qq qq q r r f qq qq rafiq rahim rafiq cs washington edu http www cs washington edu homes rafiq nice day rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr end forwarded message date fri nov pst rafiq rahim rafiq cs washington edu cse cs washington edu subject problems turnin anybody else problems turn tried share min ago reply second option doesn work third option going min rafiq rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr rr r r ffffff qq r r f q q r r f q q rr fffff q q r r aaaaaaaaa f q qq q r r f qq qq q r r f qq qq rafiq rahim rafiq cs washington edu http www cs washington edu homes rafiq nice day rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr date fri nov pst rafiq rahim rafiq cs washington edu cse cs washington edu subject re problems turnin got second option work moving everything one line rafiq fri nov rafiq rahim wrote anybody else problems turn tried share min ago reply second option doesn work third option going min rafiq rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr rr r r ffffff qq r r f q q r r f q q rr fffff q q r r aaaaaaaaa f q qq q r r f qq qq q r r f qq qq rafiq rahim rafiq cs washington edu http www cs washington edu homes rafiq nice day rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr rr r r ffffff qq r r f q q r r f q q rr fffff q q r r aaaaaaaaa f q qq q r r f qq qq q r r f qq qq rafiq rahim rafiq cs washington edu http www cs washington edu homes rafiq nice day rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr cse cs subject replies homework date sat nov brian k dewey dewey cs washington edu hello everyone guess expecting something high tech submission commands gave ways regular e mail bells whistles particular automatic reply check email see one submissions mail something back saying got ve worried didn get response saying submission received tonight fear hadn around computer early evening yesterday friday night sorry confusion brian cse geoduck subject reading section date mon nov pst martin tompa tompa geoduck cs washington edu please read pages next lecture cse geoduck subject readings heap applications date thu nov pst martin tompa tompa geoduck cs washington edu re going skip around little book order see interesting applications heaps please read section pages cse geoduck subject background reading graphs date thu nov pst martin tompa tompa geoduck cs washington edu sorry also meant ask read section dive pages section forwarded message date thu nov martin tompa tompa geoduck cs washington edu cse geoduck subject readings heap applications re going skip around little book order see interesting applications heaps please read section pages end forwarded message cse cs subject office hours appointment date thu nov brian k dewey dewey cs washington edu enough people asked appointment tomorrow make general posting ll free tomorrow th floor sieg questions feel free find bkd cse geoduck subject hw date thu nov pst martin tompa tompa geoduck cs washington edu seems amount confusion problem underlying theorem universal classes hash functions come lecture tomorrow armed questions ll happy take time beginning class answer except won give away answers homework process cse geoduck subject graph reading date mon dec pst martin tompa tompa geoduck cs washington edu please read section remainder section go together cse geoduck subject final exam date mon dec pst martin tompa tompa geoduck cs washington edu p m monday dec usual classroom always find exam schedule cse department home page cse geoduck subject character frequencies hw date mon dec pst martin tompa tompa geoduck cs washington edu table letter frequencies english use hw found http www trincoll edu cpsc cryptography caesar html except invented first two frequencies could encode full sentences characters need encode homework b c d e f g h j k l m n o p q r u v w x y z cse geoduck subject clarifications hw date tue dec pst martin tompa tompa geoduck cs washington edu brian wrote solution hw process uncovered issues left ambiguous problem statement clarifications thanks brian displaying huffman tree isn required turn debugging purposes might want import hw tree display function use check whether huffman tree re building correct ties child make left make right resolve however like streams problem statement talks using character streams decoded string bit streams encoded string inputs outputs character streams easy use standard o streams reading characters keyboard displaying characters screen bit streams slightly complicated since whole point encoding compress characters would make sense treeencode function outputs chars since would use bits bit encoding brian working package handle bit streams broadcast ready meantime debugging purposes use stream chars described standard o cse geoduck subject hw format frequency file date tue dec pst martin tompa tompa geoduck cs washington edu another clarification courtesy brian didn specify format use file character frequency pairs electronic turn also turn frequency file whatever format decide however program must read characters frequencies file practice frequencies might changed later set characters might changed assignment may assume never characters file set contain characters broadcasted earlier cse cs washington edu subject hw driver date wed dec brian k dewey dewey cs washington edu long awaited homework driver long hopefully commented well enough usable please e mail questions use driver cse homework written december brian dewey ll make usual changes driver get code work included file class called bitstream use class store output bits huffman encoding get bits back huffman decoding include stdlib h include iostream h todo insert headers need class bitstream class bitstream provides bitstream abstraction unbounded queue bits defined following operations outputbit bit b puts bit b stream getbit gets next bit stream isempty returns stream empty otherwise numbits returns number bits stream call queue fifo first bits first bits extracted typedef int bit even though pass int functions bitstream use efficient representation class bitstream public bitstream bitstream constructor bitstream bitstream destructor void outputbit bit put bit stream bit getbit get bit stream int numbits return number bits int isempty empty stream private static int bs initial size initial size stream buffer bytes static int bits per char number bits per character void resize resize buffer char achbitstream pointer bit stream buffer int imaxsize current size buffer int first length keeps track current bits int bitstream bs initial size int bitstream bits per char main driver code begins int main ll need insert local variable store huffman tree bitstream encoding char answer encoding new bitstream obviously want change name cout brian k dewey endl cout cse homework endl insert invokation buildhuffman cout string want encode y n cin answer answer y answer y cout nenter string lowercase letters spaces n cout periods terminate string return n cin get get n still input stream insert invokation treeencode note want encode whatever type input n marking end input store encoded string bitstream encoding cout compressed length encoding numbits endl cout sanity check restored string insert invocation treedecode decode bitstream print cout cout endl cout string want encode y n cin answer repeat necessary delete encoding return bitstream methods constructor sets stream bitstream bitstream imaxsize bs initial size initial size achbitstream new char imaxsize allocate memory first length initialize variables destructor deallocate stream buffer bitstream bitstream delete achbitstream method puts bit onto stream algorithm loosely based queue implemented first programming assignment tweaks imaxsize bytes queue buffer imaxsize bits per char bits buffer try store bits buffer instead aborting error increase size buffer taken care resize method either gets space dies trying void bitstream outputbit bit b unsigned int logicaloffset byteoffset bitoffset char mask b b bit may anything else abort error message cerr outputbit invalid bit endl abort length imaxsize bits per char resize ve run room resize buffer logicaloffset holds bit number re trying find buffer logicaloffset first length imaxsize bits per char byteoffset byte bit resides byteoffset logicaloffset bits per char bitoffset bit specifies bit byte re concerned bitoffset number range bits per char bitoffset logicaloffset bits per char know bit re interested either turn bit b turn bit b done mask variable worry follow next lines b set bit mask bitoffset achbitstream byteoffset mask else unset bit mask bitoffset mask achbitstream byteoffset mask length finally record one bit stream bitstream resize bit hack work know every bit buffer use otherwise wouldn method allocate new buffer twice size current one allocation fails abort program re memory recopy bits appropriate nasty part void bitstream resize char newbuf oldbuf int byteoffset cerr endl resizing endl newbuf new char imaxsize newbuf null cerr resize unable allocate memory endl abort newbuf get contents achbitstream worry follow code byteoffset first bits per char imaxsize newbuf achbitstream byteoffset imaxsize oldbuf achbitstream achbitstream newbuf imaxsize first bits per char delete oldbuf getbit returns current bit analagous dequeue much simpler algorithms since worry resizing stream empty abort program error message bit bitstream getbit bit retval int byteoffset bitoffset mask length abort error re empty cerr getbit bit string empty endl abort worry follow bit operations follow byteoffset first bits per char bitoffset first bits per char mask bitoffset retval achbitstream byteoffset mask retval bitoffset first first imaxsize bits per char length return retval isempty think int bitstream isempty length return else return numbits returns bits currently stored stream int bitstream numbits return length cse cs washington edu subject important homework submission procedures date wed dec brian k dewey dewey cs washington edu turn source files header files needed compile program program makefile data file storing character frequencies read buildhuffman procedure readme file telling well program works quirks need know turn electronically pm wednesday december th need turn hardcopy take care printing hardcopy electronic submission turn end message new makefile use first makefile things change top file names etc customized beginning makefile type make depend makefile understands two new commands make submit make submit test soon get makefile set make submit test ensure everything working send test message within reasonable amount time hours probably minutes get test message sent back acknowledgement received get response within hours send email right away find problem tested submission procedure wolf computer hopefully everything work done program type make submit package files e mail get acknowledgment copy message within minutes certainly within hours good luck happy coding bkd cse homework makefile modified earlier course makefiles december brian dewey include make submit make submit test options put userid user dewey put name want executable program hw exe put names header files e myheader h need include system headers like headers put names source files e mysource cc sources driver cc put names object files every c source file sources form mysource cc filename form mysource o objects driver o put name character frequency input file datafile frequency dat stuff might change put name compiler intend use cc g put extension intend use c files cc default cppext cc name makefile mf makefile re using dec running ultrix osf uncomment line suffixes o h cppext name readme file readme readme following line defines everything submitted make submit submit mf readme headers sources datafile following commands used submitting files tar bin tar uue usr bin uuencode stuff shouldn change cflags g wall libs program objects cc o program cflags objects libs clean rm f o cppext o cc cflags c o o depend echo updating dependencies echo sources mf sed n sudden death p echo echo dependencies generated date echo sources cc mm cflags defines echo done mf new mv mf mf last mv mf new mf submit submit tar cvf user tar submit uue user tar user tar user uue mail hw submission dewey cs user uue submit test mf tar cvf test tar mf uue test tar test tar test uue mail hw test dewey cs test uue everything line subject sudden death cse geoduck subject hw interesting efficiency idea date thu dec pst martin tompa tompa geoduck cs washington edu student came office hour today good idea speeding encoding instead following path huffman tree every time want encode character build table character encodings time build huffman tree use table instead tree encoding changes encoding time small constant per character simple table lookup rather time could big alphabet size necessary part hw solution thought might interested considering cse geoduck subject office hour monday date thu dec pst martin tompa tompa geoduck cs washington edu change office hour coming monday rather always feel free make appointment take chances dropping another time make martin cse cs washington edu subject re eof reply message thu dec pst pine ult grizzly cs washington edu date fri dec brian k dewey dewey cs washington edu check end file condition datafile c c able datafile eof datafile stream somebody correct m wrong bkd cse cs washington edu subject re hw reply message thu dec pst pine ult lynx cs washington edu date fri dec brian k dewey dewey cs washington edu hi read charactor frequency list file type keyboard thing know read file help yes need read file easy way top file need include fstream h something like void readsomestuff fstream datafile stuff file char ch int datafile ch datafile m writing top head haven used stream library might details get started treat datafile example exactly would cin cout anybody knowledgeable c streams corrections example please post bkd cse cs washington edu subject re thought makefile reply message fri dec pst zm wilbursoft com date fri dec brian k dewey dewey cs washington edu tried make submit test home failed suggestion might want make send dewey cs washington edu instead cs aha excellent point plan using make submit something cs department computer ll need change e mail address gave used abbreviated form works within department ll use department computer ignore rest message change lines submit submit tar cvf user tar submit uue user tar user tar user uue mail hw submission dewey cs user uue submit test mf tar cvf test tar mf uue test tar test tar test uue mail hw test dewey cs test uue submit submit tar cvf user tar submit uue user tar user tar user uue mail hw submission dewey cs washington edu user uue submit test mf tar cvf test tar mf uue test tar test tar test uue mail hw test dewey cs washington edu test uue cse cs washington edu subject re separate classbitstream file reply message fri dec pst pine ult lynx cs washington edu date fri dec brian k dewey dewey cs washington edu hi brian may separate bitstream class one file main cc test include class files easier yes put everything driver simplify sending via e mail put bitstream information separate files want probably make things easier manage terminate loop frequency dat file ends check end file earlier post bkd date fri dec pst diane tuong dung phan dhphan cs washington edu brian k dewey dewey cs washington edu cc cse cs washington edu subject re hw actually re reading doubles ints diane hoang phan dhphan cs washington edu undergraduate computer science university washington fri dec brian k dewey wrote hi read charactor frequency list file type keyboard thing know read file help yes need read file easy way top file need include fstream h something like void readsomestuff fstream datafile stuff file char ch int datafile ch datafile m writing top head haven used stream library might details get started treat datafile example exactly would cin cout anybody knowledgeable c streams corrections example please post bkd cse cs washington edu subject clarification readsomestuff example date fri dec brian k dewey dewey cs washington edu cut paste readsomestuff example program remember example particular won want reading characters ints file rather characters doubles bkd cse cs cc dewey scoter cs washington edu subject re make submit test reply message sat dec pst pine ult lynx cs washington edu date sun dec pst brian k dewey dewey scoter cs washington edu get problems make must separator rules line stop think problem makefile got reformatted slightly whitespace mailed test type cp dewey makefile copy copy makefile current directory command works re wolf grizzly lynx ll re edit file think work let know doesn bkd cse cs cc dewey scoter cs washington edu subject re multiply defined reply message sat dec pst pine ult b wolf cs washington edu date sun dec pst brian k dewey dewey scoter cs washington edu separate bitstream stuff separate cc h files ll need put lines int bitstream bs initial size int bitstream bits per char cc file h file h file cause problems like huff o bitstream bs initial size multiply defined huff o bitstream bits per char multiply defined main o bitstream bs initial size multiply defined main o bitstream bits per char multiply defined bkd cse cs subject sample input date sun dec pst brian k dewey dewey scoter cs washington edu m including sample session program homework results look similar mine number compressed bits get approximate mine since re dealing exact frequencies letters input variation number compressed bits significantly different m getting re probably something wrong close re good shape brian k dewey cse homework string want encode y n y enter string lowercase letters spaces periods terminate string return quick brown fox jumps lazy dog resizing resizing resizing resizing resizing compressed length sanity check restored string quick brown fox jumps lazy dog string want encode y n y enter string lowercase letters spaces periods terminate string return string lowercase letters spaces periods resizing compressed length sanity check restored string string lowercase letters spaces periods string want encode y n y enter string lowercase letters spaces periods terminate string return time good men come aid country compressed length sanity check restored string time good men come aid country string want encode y n y enter string lowercase letters spaces periods terminate string return may fire ready gridly adm george dewey compressed length sanity check restored string may fire ready gridly adm george dewey string want encode y n n cse cs subject re huffman tree reply message fri dec pst pine ult wolf cs washington edu date sun dec pst brian k dewey dewey scoter cs washington edu sure mentioned quiz section wanted confirm print huffman tree right want get treeencode treedecode work would way demonstrate re least building huffman tree properly might also help debugging requirement bkd date mon dec pst jason e aten aten cs washington edu brian k dewey dewey cs washington edu cc cse cs washington edu subject re sample input hi brian appear getting ball park still substantially different compression length numbers mostly believe tree probably built little differently sometimes ve smaller compression sometimes m larger know re correctly perhpaps compare length letters scheme get length abcdefghijklmnopqrstuvwxyz everyone yes jason gdb mips dec ultrix copyright free software foundation inc gdb run starting program homes iws aten hw work hw exe jason aten cse homework string want encode y n y enter string lowercase letters spaces periods terminate string return abc resizing compressed length sanity check restored string abc string want encode y n y enter string lowercase letters spaces periods terminate string return quick brown resizing resizing resizing compressed length sanity check restored string quick brown string want encode y n y enter string lowercase letters spaces periods terminate string return quick brown fox jumps lazy dog resizing compressed length sanity check restored string quick brown fox jumps lazy dog string want encode y n y enter string lowercase letters spaces periods terminate string return string lowercase letters spaces periods compressed length sanity check restored string string lowercase letters spaces periods string want encode y n y enter string lowercase letters spaces periods terminate string return may fire ready gridly adm george dewey compressed length sanity check restored string may fire ready gridly adm george dewey string want encode y n y enter string lowercase letters spaces periods terminate string return abcdefghijklmnopqrstuvwxyz compressed length sanity check restored string abcdefghijklmnopqrstuvwxyz string want encode y n n program exited normally gdb sun dec brian k dewey wrote m including sample session program homework results look similar mine number compressed bits get approximate mine since re dealing exact frequencies letters input variation number compressed bits significantly different m getting re probably something wrong close re good shape brian k dewey cse homework string want encode y n y enter string lowercase letters spaces periods terminate string return quick brown fox jumps lazy dog resizing resizing resizing resizing resizing compressed length sanity check restored string quick brown fox jumps lazy dog string want encode y n y enter string lowercase letters spaces periods terminate string return string lowercase letters spaces periods resizing compressed length sanity check restored string string lowercase letters spaces periods string want encode y n y enter string lowercase letters spaces periods terminate string return time good men come aid country compressed length sanity check restored string time good men come aid country string want encode y n y enter string lowercase letters spaces periods terminate string return may fire ready gridly adm george dewey compressed length sanity check restored string may fire ready gridly adm george dewey string want encode y n n date mon dec pst alan wilson wcoyote u washington edu jason e aten aten cs washington edu cc brian k dewey dewey cs washington edu cse cs washington edu subject re sample input numbers look bad little impartial exactly get still worried think printing tree showing encoded string time good way check things alan mon dec jason e aten wrote hi brian appear getting ball park still substantially different compression length numbers mostly believe tree probably built little differently sometimes ve smaller compression sometimes m larger know re correctly perhpaps compare length letters scheme get length abcdefghijklmnopqrstuvwxyz everyone yes jason gdb mips dec ultrix copyright free software foundation inc gdb run starting program homes iws aten hw work hw exe jason aten cse homework string want encode y n y enter string lowercase letters spaces periods terminate string return abc resizing compressed length sanity check restored string abc string want encode y n y enter string lowercase letters spaces periods terminate string return quick brown resizing resizing resizing compressed length sanity check restored string quick brown string want encode y n y enter string lowercase letters spaces periods terminate string return quick brown fox jumps lazy dog resizing compressed length sanity check restored string quick brown fox jumps lazy dog string want encode y n y enter string lowercase letters spaces periods terminate string return string lowercase letters spaces periods compressed length sanity check restored string string lowercase letters spaces periods string want encode y n y enter string lowercase letters spaces periods terminate string return may fire ready gridly adm george dewey compressed length sanity check restored string may fire ready gridly adm george dewey string want encode y n y enter string lowercase letters spaces periods terminate string return abcdefghijklmnopqrstuvwxyz compressed length sanity check restored string abcdefghijklmnopqrstuvwxyz string want encode y n n program exited normally gdb sun dec brian k dewey wrote m including sample session program homework results look similar mine number compressed bits get approximate mine since re dealing exact frequencies letters input variation number compressed bits significantly different m getting re probably something wrong close re good shape brian k dewey cse homework string want encode y n y enter string lowercase letters spaces periods terminate string return quick brown fox jumps lazy dog resizing resizing resizing resizing resizing compressed length sanity check restored string quick brown fox jumps lazy dog string want encode y n y enter string lowercase letters spaces periods terminate string return string lowercase letters spaces periods resizing compressed length sanity check restored string string lowercase letters spaces periods string want encode y n y enter string lowercase letters spaces periods terminate string return time good men come aid country compressed length sanity check restored string time good men come aid country string want encode y n y enter string lowercase letters spaces periods terminate string return may fire ready gridly adm george dewey compressed length sanity check restored string may fire ready gridly adm george dewey string want encode y n n jason e aten aten cs washington edu cc cse geoduck subject encoding length date mon dec pst martin tompa tompa geoduck cs washington edu forwarded message date mon dec jason e aten aten cs washington edu brian k dewey dewey cs washington edu cc cse cs washington edu subject re sample input hi brian appear getting ball park still substantially different compression length numbers mostly believe tree probably built little differently sometimes ve smaller compression sometimes m larger know re correctly perhpaps compare length letters scheme get length abcdefghijklmnopqrstuvwxyz everyone yes end forwarded message first looked obvious everyone get encoding length string abcdefghijklmnopqrstuvwxyz tried prove instead found counterexample let lesson us importance proving obvious things first let clarify everyone issue people getting somewhat different encoding lengths string everyone using algorithm right answer encoding length depend tree building algorithm breaks ties counterexample smaller alphabet suppose following alphabet corresponding frequencies b c d must start making b siblings choice since point trees weight two possible encoding trees could end d c b c d b ask encoding length abcd first case get second case get going huffman algorithm supposed produce optimal encoding tree getting suboptimal encoding one case answer sample string abcd doesn frequencies promised built tree notice string abccdd promised frequencies encoding length cases unfortunately get correct frequencies hw letter alphabet would take long test string cse cs subject re sample input reply message mon dec pst pine ult grizzly cs washington edu mime version content type text plain charset us ascii date mon dec pst brian k dewey dewey scoter cs washington edu number compressed bits significantly different m getting re probably something wrong close re good shape close give range moment see martin earlier e mail theoretical reasons practical reason always chance subtle flaw program tough sure program longer dozen lines totally correct m going treat test results gospel m fairly sure answers get optimal ballpark answers ballpark answers least know re playing game bottom line correct implementation purposes assignment one uses algorithms discussed book encode strings decodes bitstream always produces original input incorrect program flaw somewhere implementation algorithms possible clues flaw program unable decode bitstream get gibberish properly decode bitstream encoding lengths way samples flying around mailing list data students well probably means built encoding tree picking subtrees minimum frequency step notice possible symptom problem may cases generate shorter encodings samples ve seen cases longer lose points varying test data variation caused bug bkd date mon dec pst eugene shih eugene cs washington edu cse cs washington edu subject re sample input numbers agree jason alan quick brown fox jumps lazy dog bits string lowercase letters spaces periods bits may fire ready gridly adm george dewey bits eugene cse geoduck subject date mon dec pst martin tompa tompa geoduck cs washington edu bring pencils class today wednesday ll course evaluations one two days depending timing lectures cse cs washington edu subject optimal comparison date mon dec brian k dewey dewey cs washington edu interest providing exact numbers created script runs homework program string contains exactly distribution characters told use everybody program produce number bits string script assumes stick input model driver gives e ask string encode read string repeat user answers ask questions ll figure change script make work program use wolf grizzly lynx type following command hw exe dewey test script tells computer run programm hw exe get answers questions file test script home directory generate encoding bits get run notice answers input prompts appear come file instead keyboard lynx hw d hw exe dewey test script brian k dewey cse homework string want encode y n enter string lowercase letters spaces periods terminate string return resizing resizing resizing resizing resizing resizing resizing resizing resizing resizing compressed length sanity check restored string aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa aaaabbbbbbbbbccccccccccccccccccccccccccccccdddddddddddddddddddddddddddddddddddd ddddddddeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeffffffffffffffffffff ffffffffgggggggggggggggghhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhiiiiiiiiiiiiiiiiiiii iiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiijjkkkllllllllllllllllllll lllllllllllllllmmmmmmmmmmmmmmmmmmmmmmmmmnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnoooooooooooooooooooooooooooooooooooooooo oooooooooooooooooooooooooooooooooopppppppppppppppppppppppppppqqqrrrrrrrrrrrrrrr rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrsssssssssssssssss ssssssssssssssssssssssssssssssssssssssssssssssttttttttttttttttttttttttttttttttt ttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttuuuuuuuuuuuuuuuuuuu uuuuuuuuvvvvvvvvvvvvvwwwwwwwwwwwwwwwwxxxxxyyyyyyyyyyyyyyyyyyyz string want encode y n lynx hw d cse geoduck subject bits date mon dec pst martin tompa tompa geoduck cs washington edu forwarded message date mon dec brian k dewey dewey cs washington edu cse cs washington edu subject optimal comparison generate encoding bits end forwarded message thanks providing useful testbed everyone brian interest instead obvious encoding using bits per character log would use bits encode brian test string huffman gives savings says worry constant factors date mon dec pst jason e aten aten cs washington edu dewey cs cc cse cs subject script bomb hi brian program calculates length correctly reason input script appears cause driver bomb last statement return looks like iostreams crashing try clean large input encountered command line went gdb transcript follows jason gdb run test script starting program homes iws aten hw final hw exe test script jason aten cse homework string want encode y n enter string lowercase letters spaces periods terminate string return resizing resizing resizing resizing resizing resizing resizing resizing resizing resizing compressed length sanity check restored string omitted clarity messages string want encode y n program received signal sigbus bus error x e e io default finish fp x genops c genops c file directory current language auto currently c gdb bt x e e io default finish fp x genops c x adc streambuf streambuf x chrg streambuf cc x ios ios x fffb c chrg streambuf h x c c ifstream ifstream x fffb chrg fstream h x main main c gdb fragment driver code causes bomb cout compressed length encoding numbits endl cout sanity check restored string insert invocation treedecode decode bitstream print cout treedecode root encoding cout cout endl cout string want encode y n cin answer repeat necessary delete encoding return line causes bus error date mon dec pst rafiq rahim rafiq cs washington edu brian k dewey dewey cs washington edu cc cse cs washington edu martin tompa tompa geoduck cs washington edu subject input char hi m problem take input characters rafiq rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr rr r r ffffff qq r r f q q r r f q q rr fffff q q r r aaaaaaaaa f q qq q r r f qq qq q r r f qq qq rafiq rahim rafiq cs washington edu http www cs washington edu homes rafiq nice day rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr date mon dec pst jenna hall jhall u washington edu reply jenna hall jhall u washington edu cse cs washington edu subject problem files program dies point trying declare datafile ve tried ifstream datafile datafile open frequency dat ifstream datafile frequency dat neither one works suggestions thanks jenna date mon dec pst mike shafer shafer cs washington edu jenna hall jhall u washington edu cc cse cs washington edu subject re problem files opened mine following way ifstream infile ch freq txt ios hope helps mon dec jenna hall wrote program dies point trying declare datafile ve tried ifstream datafile datafile open frequency dat ifstream datafile frequency dat neither one works suggestions thanks jenna date mon dec pst jenna hall jhall u washington edu mike shafer shafer cs washington edu cc cse cs washington edu subject re problem files still getting problem thanks anyway date mon dec pst douglas beal dougbeal cs washington edu reply douglas beal dougbeal cs washington edu cse cs washington edu subject re problem files ifstream fin frequency message give dies core dump doug mon dec jenna hall wrote program dies point trying declare datafile ve tried ifstream datafile datafile open frequency dat ifstream datafile frequency dat neither one works suggestions thanks jenna date mon dec pst jason e aten aten cs washington edu jenna hall jhall u washington edu cc cse cs washington edu subject re problem files include ing iostream h fstream h headers top file top file looks like include iostream h include fstream h include stdlib h const char freq file frequency dat ifstream freqsource freq file ios freqsource cout nfailed open freq file endl exit jason mon dec jenna hall wrote still getting problem thanks anyway date mon dec pst jason e aten aten cs washington edu rafiq rahim rafiq cs washington edu cc cse cs washington edu subject re input char yes saw similar problem reported list kind error get jason mon dec rafiq rahim wrote hi m problem take input characters rafiq rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr rr r r ffffff qq r r f q q r r f q q rr fffff q q r r aaaaaaaaa f q qq q r r f qq qq q r r f qq qq rafiq rahim rafiq cs washington edu http www cs washington edu homes rafiq nice day rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr date mon dec pst go hori hori cs washington edu brian k dewey dewey cs washington edu cc cse cs washington edu subject re optimal comparison hi got bits instead anyone know go mon dec brian k dewey wrote interest providing exact numbers created script runs homework program string contains exactly distribution characters told use everybody program produce number bits string script assumes stick input model driver gives e ask string encode read string repeat user answers ask questions ll figure change script make work program use wolf grizzly lynx type following command hw exe dewey test script tells computer run programm hw exe get answers questions file test script home directory generate encoding bits get run notice answers input prompts appear come file instead keyboard lynx hw d hw exe dewey test script brian k dewey cse homework string want encode y n enter string lowercase letters spaces periods terminate string return resizing resizing resizing resizing resizing resizing resizing resizing resizing resizing compressed length sanity check restored string aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa aaaabbbbbbbbbccccccccccccccccccccccccccccccdddddddddddddddddddddddddddddddddddd ddddddddeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeffffffffffffffffffff ffffffffgggggggggggggggghhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhiiiiiiiiiiiiiiiiiiii iiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiijjkkkllllllllllllllllllll lllllllllllllllmmmmmmmmmmmmmmmmmmmmmmmmmnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnoooooooooooooooooooooooooooooooooooooooo oooooooooooooooooooooooooooooooooopppppppppppppppppppppppppppqqqrrrrrrrrrrrrrrr rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrsssssssssssssssss ssssssssssssssssssssssssssssssssssssssssssssssttttttttttttttttttttttttttttttttt ttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttuuuuuuuuuuuuuuuuuuu uuuuuuuuvvvvvvvvvvvvvwwwwwwwwwwwwwwwwxxxxxyyyyyyyyyyyyyyyyyyyz string want encode y n lynx hw d date mon dec pst rafiq rahim rafiq cs washington edu jason e aten aten cs washington edu cc cse cs washington edu subject re input char put brian bitstream code file moved encode decode code main huff tree function mysteriously started working fine btw remeber auto deleting destructors nelly stuck day rafiq mon dec jason e aten wrote yes saw similar problem reported list kind error get jason mon dec rafiq rahim wrote hi m problem take input characters rafiq rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr rr r r ffffff qq r r f q q r r f q q rr fffff q q r r aaaaaaaaa f q qq q r r f qq qq q r r f qq qq rafiq rahim rafiq cs washington edu http www cs washington edu homes rafiq nice day rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr rr r r ffffff qq r r f q q r r f q q rr fffff q q r r aaaaaaaaa f q qq q r r f qq qq q r r f qq qq rafiq rahim rafiq cs washington edu http www cs washington edu homes rafiq nice day rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr date mon dec pst rafiq rahim rafiq cs washington edu go hori hori cs washington edu cc brian k dewey dewey cs washington edu cse cs washington edu subject re optimal comparison studend martin question code martin seemed preety confident number students lab similar problems common variable found used compiler home rafiq mon dec go hori wrote hi got bits instead anyone know go mon dec brian k dewey wrote interest providing exact numbers created script runs homework program string contains exactly distribution characters told use everybody program produce number bits string script assumes stick input model driver gives e ask string encode read string repeat user answers ask questions ll figure change script make work program use wolf grizzly lynx type following command hw exe dewey test script tells computer run programm hw exe get answers questions file test script home directory generate encoding bits get run notice answers input prompts appear come file instead keyboard lynx hw d hw exe dewey test script brian k dewey cse homework string want encode y n enter string lowercase letters spaces periods terminate string return resizing resizing resizing resizing resizing resizing resizing resizing resizing resizing compressed length sanity check restored string aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa aaaabbbbbbbbbccccccccccccccccccccccccccccccdddddddddddddddddddddddddddddddddddd ddddddddeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeffffffffffffffffffff ffffffffgggggggggggggggghhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhiiiiiiiiiiiiiiiiiiii iiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiijjkkkllllllllllllllllllll lllllllllllllllmmmmmmmmmmmmmmmmmmmmmmmmmnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnoooooooooooooooooooooooooooooooooooooooo oooooooooooooooooooooooooooooooooopppppppppppppppppppppppppppqqqrrrrrrrrrrrrrrr rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrsssssssssssssssss ssssssssssssssssssssssssssssssssssssssssssssssttttttttttttttttttttttttttttttttt ttttttttttttttttttttttttttttttttttttttttttttttttttttttttttttuuuuuuuuuuuuuuuuuuu uuuuuuuuvvvvvvvvvvvvvwwwwwwwwwwwwwwwwxxxxxyyyyyyyyyyyyyyyyyyyz string want encode y n lynx hw d rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr rr r r ffffff qq r r f q q r r f q q rr fffff q q r r aaaaaaaaa f q qq q r r f qq qq q r r f qq qq rafiq rahim rafiq cs washington edu http www cs washington edu homes rafiq nice day rrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrrr date tue dec pst eugene shih eugene cs washington edu go hori hori cs washington edu cc brian k dewey dewey cs washington edu cse cs washington edu subject re optimal comparison reason bits instead probably huffman tree exactly incorrect suggest importing display function hw looking tree get particular getting leaves leaf unique mon dec go hori wrote hi got bits instead anyone know go date tue dec pst douglas beal dougbeal cs washington edu brian k dewey dewey cs washington edu cc cse cs washington edu subject compiling assignemnt personaly debian linux commented re using dec running ultrix osf uncomment line suffixes o h cppext version want using makefile even need worry cse request cs washington edu last update