date tue nov gmt server ncsa content type text html last modified mon nov gmt content length architecture home page univ wisconsin cs computer architecture group world wide web home page computer architecture group university wisconsin madison department computer sciences information computer architecture visit www computer architecture page table contents research impact projects faculty courses industrial affiliates program tech reports exams seminars mailing list graduate students graduating students architecture alumni industrial impact computer architecture research university wisconsin madison updated june document highlights industrial impact research computer architecture university wisconsin since four broad areas contributions processor design emphasis instruction level parallel processor technology ii cache memory systems iii multiprocessor systems iv enabling technologies processor technologies one early contributions instruction level parallel also called ilp processor technology development decoupled architecture concept developed term superscalar coined decoupled architecture fact superscalar architecture supports issuing multiple instructions per cycle sequential instruction stream commonly regarded first commercially available superscalar processor astronautics zs appeared developed direct spin university wisconsin research efforts since zs many superscalar processors used decoupled architecture principles separate addressing activity computation activity thereby increasing amount instruction level parallelism exploited recent processors follow decoupled architecture principles include ibm power series processors silicon graphics r previously called silicon graphics tfp another major contribution development precise interrupt register renaming techniques order instruction execution smith pleszkun provided first published work directed specifically implementation precise interrupts paper laid fundamental problems proposed number solutions techniques sohi extended precise interrupt maintenance mechanisms carry register renaming articulated organization dynamically scheduled superscalar processor using register renaming precise interrupts body research fundamental emergence superscalar processors mechanisms proposed uw researchers core many modern superscalar processors including motorola recently announced powerpc upcoming powerpc several soon announced superscalar processors also mechanisms core industrially relevant work ilp processors continuing uw recent research contributions include novel ways integrating guarded execution existing instruction sets new paradigm exploiting instruction level parallelism new paradigm called multiscalar several inherent properties make promising existing superscalar vliw paradigms turn century processor cache memory systems wisconsin researchers also long history contributions design memory systems particularly caches anticipating era memory bandwidth would severely restrict system performance goodman showed caches used reduce average memory latency also limit peak memory bandwidth requirements focusing temporal rather spatial locality wisconsin researchers provided much motivation recent shift set associative direct mapped caches smith goodman showed circumstances direct mapped caches obtain better hit ratios fully associative caches hill demonstrated direct mapped caches yield better performance set associative ones despite larger miss ratios provided insight cache design c model separates compulsory capacity conflict components miss ratio area cache design goodman showed static column drams scrams used poor man cache providing benefits cache memory without using sram hill wood participated first studies multi megabyte cache design contemporaries criticized never become practical sohi showed processors would change using prevalent blocking caches non blocking caches became aggressive exploiting ilp one contributions found varying extents modern computer systems example sun microsystems compaq built computers containing scram caches direct mapped caches least common set associative ones multi megabyte second level caches widely used recently announced superscalar microprocessors use non blocking caches multiprocessor systems multiprocessor systems goodman published first paper describing snooping cache coherence protocol snooping cache protocols enabled construction shared bus multiprocessors also called symmetric multiprocessors marketplace multiprocessors one earliest available general purpose multiprocessor systems become common form multiprocessing available today among earliest snooping cache systems sequent balance encore multimax directly influenced wisconsin work microprocessors motorola implemented almost exactly write protocol described goodman recent multiprocessor workstations servers manufactured sun microsystems also use snooping cache protocols goodman sohi contributed ieee standard scalable coherent interface first commercial grade directory based coherence scheme goodman contributed extensively basic cache coherence protocol development options achieving higher performance goodman sohi primary contributors development protocols large numbers caches kiloprocessor extensions convex exemplar system first commercial system use scalable coherent interface many systems currently development including unisys ibm goodman vernon developed first synchronizing prefetch primitive incorporated sci standard technique known qolb synchronizing shared memory accesses also inspired software implementations implementing efficient locks minimize network traffic contention particular qolb inspired mcs lock become standard locking mechanism shared memory multiprocessors another synchronization mechanism invented uw researchers novel technique combine fetch increment operations applicability technique likely grow powerful multiprocessors aggressive synchronization requirements built another area contributions memory consistency models specify semantics shared memory wisconsin researchers among first recognize memory consistency synonymous cache coherence goodman defined processor consistency codified general effect buffering writes hill showed weak ordering could viewed sequential consistency strongest model data race free programs formalization subsequent generalizations allow sophisticated compiler hardware optimizations previously possible full industrial impact memory consistency models yet felt however probably must await wide deployment order issue processors non blocking caches software hardware hybrid coherence solutions practical research multiprocessors continuing wisconsin recent research includes contributions middle interface languages compilers system software hardware example uw researchers developing tempest novel approach provide support shared memory message passing hybrid combinations two enabling technologies design computer system requires quantitative assessments various design criteria wisconsin researchers advanced theory practice important enabling technologies hill developed new algorithms software tools use algorithms simultaneously simulating multiple alternative cache organizations larus developed new techniques software tools using techniques rewriting executables profile programs wood hill advanced state art trace sampling techniques important techniques study large caches equally important wisconsin researchers transferred new techniques software tools industry academia others synergistically build work tools ae cprof dinero tycho qpt used one thousand academic industrial sites uw researchers also provided data industry uses design computers example designers download spec miss ratio data ftp site would otherwise require four machine years regenerate recently uw researchers developed wisconsin wind tunnel first effective parallel simulator parallel computers running thinking machines cm wisconsin wind tunnel permits efficient evaluation real application performance proposed hardware current projects multiscalar galileo wisconsin wind tunnel faculty james r goodman mark d hill gurindar sohi david wood visiting adjunct faculty james e smith department electrical computer engineering architecture courses cs ece digital system fundamentals cs ece machine organization programming cs ece introduction computer architecture cs ece advanced computer architecture cs ece vlsi systems design cs ece computer aided design vlsi cs ece advanced computer architecture ii recommended courses cs introduction compilers cs operating systems cs introduction performance modeling cs compilers cs advanced operating systems cs advanced performance modeling statistics experimental design engineers industrial affiliates program computer architecture group set program industrial affiliates information please read public affiliates page computer architecture industrial affiliates page access restricted current affiliates useful information recent architecture tech reports architecture qualifying exams computer architecture seminar join architecture mailing list mail listproc cs wisc edu single line body subscribe architecture jane doe graduate students note student home page content restricted endorsed univ wisconsin scott breach doug burger babak falsafi alain k gi stefanos kaxiras andreas moshovos shubu mukherjee subbarao palacharla steve reinhardt yannis schoinas avinash sodani n vijaykumar sohi goodman wood goodman goodman sohi hill smith wood hill sohi architecture ph d alumni todd m austin april advisor guri sohi thesis hardware software mechanisms reducing load latency dionisios pnevmatikatos december advisor guri sohi thesis incorporating guarded execution existing instruction sets alvin r lebeck november advisor david wood thesis tools techniques memory system design analysis madhusudhan talluri august advisor mark hill thesis use superpages subblocking address translation hierarchy manoj franklin december advisor guri sohi thesis multiscalar architecture sarita v adve november advisor mark hill thesis designing memory consistency models shared memory multiprocessors ross johnson june advisor jim goodman thesis extending scalable coherent interface large scale shared memory steve scott august advisor jim goodman thesis toward design large scale shared memory multiprocessors mark friedman january advisor guri sohi thesis architectural characterization prolog execution sriram vajapeyam december advisor guri sohi thesis instruction level characterization cray y mp processor men chow chiang september advisor guri sohi thesis memory system design bus based multiprocessors richard e kessler july advisor mark hill thesis analysis multi megabyte secondary cpu cache memories wei chung hsu august advisor jim goodman thesis register allocation code scheduling load store architectures william cox august advisor jim goodman thesis performance disk servers koujuch liou august advisor jim goodman thesis design pipelined memory systems decoupled architectures honesty c young june advisor jim goodman thesis evaluation decoupled computer architecture design vector extension last modified dburger cs wisc edu tue apr cdt