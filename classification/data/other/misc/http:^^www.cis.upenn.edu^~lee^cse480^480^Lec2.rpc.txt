server netscape communications date tuesday jan gmt last modified thursday mar gmt content length content type text plain cse lecture notes february remote procedure call picture goal make rpc transparent e behave like proc call potential problems address space parameters failtures basic rtc normal procedure call count read fd buf nbytes fig parameters call value call reference call copy restore e g ada rpc implementation uses client stubs place acutal procedure code fig steps client parameter passing parameter marschalling packing paramenters msg n sum fig handle different data represenations ebcdic ascii universial ascii floating point numbers little endian bytes right left big endian bytes left right sparc e g fig jill two approaches direct conversion n n translators ii cannonical represenation e g xdr handle pointers address copy use internal offset tree structure recursive structure dynamic binding locate server register server name version handle unique id rpc semantics presence failures goal rpc behave like local procedure call cannot locate server server version mismatch raise exception request msg lost use timer resend request msg reply msg lost use timer resent another request server need tell whether request duplicate unless request idempotent make request idempotent e g read fd buf n read fd buf pos n deposit money possible make idempotent ii assign request nos keep track server crashes receiving request unique enough since cannot know whether rpc done fig b c cannot distinguished raise except rcp complete retransmit reply request possible semantics nothing least ii iii exactly possible implement client crashes sending request make request crash orphan computation active parent potential problems waste cycles etc deal orphans extermination ii reincarnation iii expiration killing orphans may desirable e g hold locks