table contents allegro cl version documentationtocdocoverviewcgdocrelnotesfaqindexpermutedindexallegro cl version object described page changed versiontable contents allegro cl version documentationthis document table contents allegro cl html pdf essay files doc doc cg subdirectories allegro directory along links ansi spec mop documentation documents listed categories general information language features programming tools common graphics ide add features alphabetical listing documents filename appears general informationansi spec ansicl ansicl htm examples using allegro cl examples htm installation allegro cl related products installation htm allegro cl documentation introduction overview introduction htm mop documentation mop contents html release notes allegro cl release notes htm allegro cl startup startup htm release notes allegro cl version release notes htm language featuresallegro cl case modes case htm introduction cbind cplbind cbind intro htm building using allegro common lisp based dll dll htm dumplisp dumplisp htm errors errors htm foreign function interface foreign functions htm foreign types ftype htm fwrapping advice fwrappers advice htm garbage collection gc htm gray streams allegro cl gray streams htm international character support allegro cl iacl htm implementation implementation htm loading loading htm user defined main main htm miscellaneous functionality miscellaneous htm multiprocessing multiprocessing htm operating system interface os interface htm operating system constants defined allegro cl osi constants htm packages packages htm pathnames pathnames htm shell module interface shell module htm symmetric multiprocessing allegro cl smp htm streams allegro cl streams htm string utility functions allegro cl string utilities htm lisp shared library unix shared library htm programming toolsbuilding images building images htm compiler explanations compiler explanations htm compiling compiling htm allegro composer composer htm cross reference facility cross reference htm debugging debugging htm defsystem defsystem htm delivering applications delivery htm emacs lisp interface eli htm environments support allegro common lisp environments htm inspector inspector htm runtime analyzer runtime analyzer htm source file recording source file recording htm allegro cl runtime runtime htm allegro cl test harness test harness htm top level top level htm common graphics idecommon graphics integrated development environment cgide htm adding context sensitive help common graphics application cg cg application help htm chart widget tutorial cg cg chart widget htm clipboard common graphics cg cg clipboard htm color palettes common graphics cg cg color palettes htm coordinate systems common graphics cg cg coordinates htm drawing graphics common graphics cg cg drawing htm event handling common graphics cg cg events htm icons common graphics cg cg icons htm mci support common graphics cg cg mci htm creating object editor dialog class grid programmatically cg cg object editor class grid htm pixmaps common graphics cg cg pixmaps htm rich text editing common graphics cg cg rich text htm system internals common graphics cg cg system htm common graphics timer facility cg cg timers htm ide user guide cg ide ug ide user guide htm add featuresallegrocache documentation acache doc acache pdf allegroserve documentation aserve aserve html allegro odbc aodbc htm clim user guide clim ug pdf date time iso support allegro cl date time htm dde support allegro cl dde htm domain naming system utility dns htm document object model dom allegro common lisp dom htm allegro cl interface amazon elastic compute cloud ec ec htm flavors flavors htm allegro ftp client module ftp htm jlinker dynamic link lisp java jlinker htm allegro cl imap pop interface imap htm allegro mysql direct connect library mysql htm ndbm support allegro cl ndbm htm ole interface ole htm oracle interface allegro oracle direct connect oracle interface htm allegro prolog prolog html regular expression api regexp htm remote procedure call support allegro cl rpc htm jil java lisp jil htm sax xml parser allegro common lisp sax htm soap api allegro cl soap htm allegro cl socket library socket htm uri support allegro cl uri htm xml rpc api allegro common lisp xml rpc htm allegrocache documentation acache doc acache pdf ansi spec ansicl ansicl htm gtk interface documentation gtk readme txt orblink documentation orblink readme htm allegro odbc aodbc htm aodbc introduction platform specific information aodbc allegro odbc thread safety implementation notes aodbc representing characters databases aodbc using odbc odbc examples simple interaction binding input parameters scanning rows character input buffers queries transactions reference conditions allegroserve documentation aserve aserve html building images building images htm comparison excl dumplisp comparison excl generate application template call build lisp image character size resulting image arguments build lisp image defaults inherited running image arguments build lisp image defaults inherited running image arguments build lisp image defaults taken environment variables debugging image build problem failure use custom cl building image include patches minimal top levels using default minimal top level requiring normal top level minimal top level lisp top level variables allegro cl case modes case htm allegro cl modern mode modern mode background ansi mode problems modern mode note support ansi mode case implementation allegro cl readtable case ansi modern code portability package names package definitions creating symbols testing symbols importing ansi mode code modern mode importing ansi modern mode code modern ansi mode lisp importing ansi mode code modern mode importing modern mode code ansi mode introduction cbind cplbind cbind intro htm adding context sensitive help common graphics application cg cg application help htm displaying help comprehensive help quick help triggering help triggering help automatically triggering help request deciding provide help help selected window help selected data object example providing help dealing unexpected error application chart widget tutorial cg cg chart widget htm introduction chart widget initial complete chart widget example chart widget tutorial adding data chart widget chart axes modifying existing chart items additional types chart values animated charts multiple chart objects alternate chart views meaningful id chart objects label printing functions meaningful labels chart items meaningful id chart items accessing existing data rather pushing chart values graphing mathematical functions animating mathematical functions major minor tic marks tic labels grid lines filling entire widget saving chart image final standalone examples using two value axes clipboard common graphics cg cg clipboard htm two clipboards common graphics os clipboard lisp clipboard built cut copy paste functionality adding cut copy paste commands menu bar viewing lisp clipboard contents clipboard example color palettes common graphics cg cg color palettes htm coordinate systems common graphics cg cg coordinates htm coordinate system unit size coordinate system location origin drawing graphics common graphics cg cg drawing htm draw drawing windows general considerations drawing particular kinds windows drawing screen drawing bitmap streams drawing printers coordinates drawing functions drawing lines filling areas erasing current drawing style drawing text fonts drawing pixmaps icons animation event handling common graphics cg cg events htm icons common graphics cg cg icons htm use icons using built icon assigning icon window title bar assigning icon control creating icon drawing icon assigning icon application mci support common graphics cg cg mci htm introduction mci functionality common graphics mci functionality creating object editor dialog class grid programmatically cg cg object editor class grid htm introduction object editors class grids creating object editors class grids example creating object editor class grid pixmaps common graphics cg cg pixmaps htm introduction pixmaps using properties pixmap properties creating pixmap programmatically textures texture properties texture infos cached pixmaps pixmaps picture controls outline controls pixmaps pixmap handle functions converting bmp files lisp code enhancing ide pixmaps mouse cursors rich text editing common graphics cg cg rich text htm rich text interactive interface rich text programmatic interface system internals common graphics cg cg system htm system variable system configuration app slot system start shut dumplisp common graphics timer facility cg cg timers htm ide user guide cg ide ug ide user guide htm common graphics integrated development environment cgide htm common graphics ide documentation menus dialogs ide platform specific information common graphics streams ide startup create bit image starts ide submitting bug report break ide child parent owner windows get sample code creating controls using multiple windowing processes common graphics application modal cg utility dialogs shared processes cg re entrancy enhanced break key functionality debugging multiple processes ide using ide user code busy design considerations event driven applications message handling routines run long time message handling routines block widget window classes creating standalone common graphics application without using project system position class cl math function functionsa windows api windows api program windows without cgb displaying east asian characters common graphics ide microsoft windows clim user guide clim ug pdf compiler explanations compiler explanations htm explanation introduction explain labels boxing b labels bgen calls c labels calln inlining labels iadd labels iarg labels iash labels icmp labels icon labels idyn labels ieql labels ifnc labels igen labels ihof labels ilen labels imac labels iref labels itab labels ityp labels tailmerging m labels merg labels mnot labels type labels targ labels tgen labels tinf labels tres labels variable v labels vreg labels vflt labels vmem labels examples using explain declaration calls types explanation boxing explanation variables explanation tail merging explanation inlining explanations compiling compiling htm lisp images without compiler compile file persistence defining forms encountered compile file fasl files compiling individual forms groups forms compiler warnings undefined function inconsistent name usage unreachable code eof encountered error variables control information printed compile file file types declarations optimizations examining current settings effect declared fixnums example argument count checking example argument type specialized function example bound symbol example tail merging discussion changing compiler optimization switch settings verifying declarations switch nil meaning always always excl trusted type declaration pointers choosing speed safety values optimizing fast floating point operations supported operations help declarations explain declaration declarations optimizations inline declarations ignored defstruct accessors stack consing avoiding consing using apply stack allocation adding typep transformers compiler handling top level forms warnings signaled misspelling type declarations allegro composer composer htm introduction customizing executing allegro composer setting system allegro composer building image contains allegro composer starting stopping allegro composer starting allegro composer starting allegro composer clinit cl file allegro composer starts stopping allegro composer errors running allegro composer composer variables definitions terms associated allegro composer overview composer functionality big picture acl composer menu inspect menu item clos submenu xref submenu profiler submenu options menu item submenu help submenu exit composer common windows menu item gestures presentations changing gesture bindings menus allegro composer graphs scrolling graphs graph overview window window menu graph window menu bar history menu graph window menu bar menu gesture graph node secondary menu gesture graph node find node name menu choice debugger allegro composer displaying stack backtrace window window menu debugger window menu bar debugger menu debugger window menu bar menus frames secondary menu gesture menu menus frames menu gesture menu menus objects menu gesture local window based inspector inspector windows menus window menu inspector window inspect menu inspector window history menu inspector window menus labels values inspector window composer browsers clos class browsers cross reference browsers defsystem browser process browser menu gesture process window interface runtime analyzer runtime analyzer profile graphsa configuring x windows allegro composer name class composer tools resources tools specifying resource values xdefaults reinitializing resourcesb problems starting allegro composer b error process named connect emacs daemon b error package composer found b error unknown hostname cross reference facility cross reference htm cross reference introduction cross reference package cross reference database cross reference information generated xref information fasl file added database things note compiler macros access xref database clearing database general description query functions commands function name object arguments file information files keyword argument functions keyword argument inverse keyword argument cross referencer example date time iso support allegro cl date time htm date time introduction iso iso dates iso times parsing iso date time representations validating iso date time representations conversions date time cl universal time getting date time value string time intervals adding subtracting durations date time classes date time class duration class time interval class date time operators date time variables copyright notice dde support allegro cl dde htm dde introduction dde example creating port lisp dde client dde functionality correspondence windows commands dde function names debugging debugging htm introduction getting debugger internal functions debugging background processes stack commands zoom brief moderate verbose modes zoom nil modes zoom function function nil modes zoom specials specials nil modes zoom relative relative nil modes zoom bt command quick look stack variables affect behavior zoom special handling certain errors zoom zoom analogs stack movement commands commands hide frames frame information commands local variables evaluation getting backtrace programmatically local variables debugger discard local variable information dumplisp summary discussion locals local variables compiler treat local variables difference using registers using stack live dead ranges local variables locals functions tail position example showing live range debug behavior locals behavior debug problem debug debug behavior local value good behavior locals debug behavior debug speed behavior debug speed compiled debug want see dead locals anyway break exit return restart ghost frames backtraces summary ghost frames section ghost frame kinds optimizations cause ghost frames debugger know ghost frames debugger display ghost frames return restart ghost frame suspension points mean ghost frame ghost frame possible frames displayed ghost frames displayed functions appear stack ghost frames brief backtrace turn printing ghost frames backtraces involving system functions ghost frames ghost frames allegro composer tracer tracing function objects trace example tracing setf methods internal functions stepper turning stepping stepping commands variables stepping example lisp debug ldb stepper entering exiting ldb stepper ldb stepper functional interface ldb stepping example run source steppera gdb dbx windbg interface defsystem defsystem htm defsystem introduction defsystem terminology using defsystem module specifications short form module specifications long form module specifications redefinition systems predefined operations systems defsystem variables extending defsystem class hierarchy defining new classes extending defsystem syntax shared initialize methods defsystem methods specialized defsystem extension examples example defining new system class example defining new system operations example master development directories example one system definition referencing another delivering applications delivery htm delivery introduction definitions developing application preparing delivery summary delivery process legal licensing issues deciding necessary features deciding top level user interaction packaging product including desired modules defining init functionality specifying initial value package setting logical pathname translations use shared libraries foreign files clos training generic functions method combination discrimination effective methods caches fast dispatching constructor functions clos start optimizations make instance optimization creating deliverable resources defsystem tuning application development environment gc parameters switches gc cursors allegro presto allegro runtime windows specific information console window applications icon files suitable value icon file creating console app windows setting versioninfo application executable windows installation application windows using install wizard uninstalling application windows testing application expiration warnings generate executable wrapper generate application patching application delivery allegro cl patch naming scheme loading allegro cl patches patches application creating patch files general creating patch file patch files including application patches image build time superseding patch withdrawing patch distributing patches loading patches turning application windows service ntservice functions ntservice tutorial building using allegro common lisp based dll dll htm using example allegro cl based dll fact dll building example dll fact dll building companion dxl file fact dxl building lisp based dll deploying lisp based dll lnkacl dll exported routines domain naming system utility dns htm allegro cl domain naming system package nameserver dns api address queries inverse queries mx queries txt queries undecoded responses repeat timeout document object model dom allegro common lisp dom htm dom introduction status conformance naming conventions dom ref dom structure model standard classes methods values standard classes standard methods functions standard values standard conditions additional classes methods functions variables examples using dom index dom dumplisp dumplisp htm introduction excl dumplisp tool saving image finding additional files uses excl dumplisp excl dumplisp fail conditions allegro directory src aclstart cl source code startup creating application creating customized image dumped image starts values global variables dumped image starts command line arguments dumped image starts reading init files dumped image starts restart actions dumped image starts two restart functions emacs lisp interface dumped images dumping prestoized image standalone image supported dumped image finds loaded library files logical pathnames dumped image dumped image finds allegro directory dumplisp multiprocessing use dumped image allegro cl interface amazon elastic compute cloud ec ec htm ec introductionrelease notes region keyword argument removed identity keyword argument added net ec symbols unexported release notes ec introduction ec module package supported platforms example requirements general comments ec interface ec setup requirements ec classes functions image manipulation functions instance manipulation functions key pair manipulation functions security manipulation functions elastic ip address manipulation functions ebs manipulation high level ec functions miscellaneous functionsa ec variablesb ec classes b ec instance class b ec image class b ec key class b ec security group class b ec ip permissions class b ec volume class b ec attachment class b ec snapshot classc ec operators c image manipulation operators c instance manipulation operators c key pair manipulation operators c security manipulation operators c elastic ip address manipulation operators c functionality ebs manipulation c high level operators c miscellaneous operatorsd ec functionality ec region ec identity ec error ec introduction ec module package supported platforms example requirements general comments ec interface ec setup requirements ec classes functions image manipulation functions instance manipulation functions key pair manipulation functions security manipulation functions elastic ip address manipulation functions ebs manipulation high level ec functions miscellaneous functionse ec variablesf ec classes f ec instance class f ec image class f ec key class f ec security group class f ec ip permissions class f ec volume class f ec attachment class f ec snapshot classg ec operators g image manipulation operators g instance manipulation operators g key pair manipulation operators g security manipulation operators g elastic ip address manipulation operators g functionality ebs manipulation g high level operators g miscellaneous operatorsh ec functionality ec region ec identity ec error emacs lisp interface eli htm introduction emacs lisp interface new emacs starting allegro cl subprocess emacs run two emacs connected two different lisps notation conventions used document format document previous versions emacs emacs file emacs documentation licensing issues free software foundation quirks emacs lisp interface security emacs lisp interface bug reports fixes changes interface release improved menu bar menus compliance major mode conventions including user visible changes installing patch new keybindings auto arglist spc pop buffer handling misc starting emacs lisp interface troubleshooting emacs lisp interface emacs reports function defined interface undefined emacs reports encountered error loading emacs checking setup strange unexplained behavior running common lisp key bindings common lisp subprocess mode typing input common lisp input rings tracking directory changes tracking package changes lisp listeners argument lists functions variables interacting cl subprocess editing common lisp programs indentation packages readtables syntactic modification common lisp source code information sharing common lisp emacs common lisp mode functions variables definition mode functions variables writing debugging common lisp programs finding definitions functions interaction allegro composer modifying state common lisp environment debugging common lisp processes emacs lisp listeners multiprocessing miscellaneous programming aids bug reports shell modes advanced miscellaneous features emacs hooks emacs lisp interface excl dumplisp environments support allegro common lisp environments htm environments introduction general information environments allegro cl kinds environments environments functionality environments allegro cl errata distributed allegro cl documentation errata htm errata introduction errors errors htm errors cl stream error common errors unhandled error occurred initialization attempt call name defined macro gc errors bus errors segmentation violations using package package results name conflicts type errors sequence functions fastseq safeseq examples using allegro cl examples htm examples introduction common graphics ide examples allegro cl rpc examples addcaps application allegroserve examples checklinks tool lisp dll example jlinker examples soap examples ssl examples simple network paging protocol example encapsulating streams examples skeleton test application example using telnet communicate running lisp process lisp unix shared library xml rpc examples flavors flavors htm foreign function interface foreign functions htm foreign functions introduction swig support automatic generation foreign function definitions cbind support automatic generation foreign function definitions notation different versions allegro cl load foreign code differently package information load foreign code cl load foreign file processing externals must resolved sl dylib dll file created one library file cannot depend already loaded library file entry points updated automatically duplicate entry points never problem modify sl dylib dll file loaded must load modified file foreign code cannot easily included installation time foreign functions multiprocessing creating shared objects refer allegro cl functionality linking allegro cl shared library mac os x delaying linking allegro cl shared library runtime releasing heap calling foreign functions x unix model foreign functions foreign function interface specification foreign function interface function summary note foreign addresses def foreign call def foreign call syntax def foreign call returning keyword argument def foreign call examples def foreign variable def foreign variable syntax def foreign variable examples conventions passing arguments modifying arguments called address use arrays lisp may see modification argument passed address lisp unexpectedly sees change argument passed address passing fixnums bignums integers another example using arrays pass values passing strings lisp c passing strings lisp c special case passing array strings lisp c passing structures value handling signals foreign code input output foreign code using lisp functions values c accessing lisp values c lisp value calling lisp functions c lisp call address lisp call calling foreign callables lispa foreign functions windows making dll making fortran dll lisp side foreign functions complete exampleb building shared libraries solarisc building shared libraries aixd building shared libraries linuxe building shared libraries freebsdf building shared libraries mac os x allegro ftp client module ftp htm introduction allegro ftp client api foreign types ftype htm foreign types introduction foreign types facility examples syntax foreign types union two structs primitive types allocation types aligned pointers bit fields programming interface passing foreign objects foreign functions string representation quiz fwrapping advice fwrappers advice htm fwrap facility background def fwrapper fwrap facility macroexpansion compilation fwrappers fwrap examples simple fwrap example fwrapper argument access example interaction fwrap trace modifications made trace replacing advice fwrappers introduction advising function advice class advice class around advice class position argument removing advice function macro utilities associated advice examples using advice advising macros garbage collection gc htm garbage collection introduction garbage collection scheme newspace managed scavenges scavenges occur system knows age objects newspace objects survive long enough tenured oldspace placement newspace oldspace simple model oldspace newspace lisp grow necessary almost former gap problem user control garbage collector switches parameters triggering scavenge triggering global gc getting information memory management using cl room tuning garbage collector find scavenges happen many bytes tenured global gc many bytes freed many old areas application loaded things changed running initial sizes old new spaces system parameters switches parameters control generations tenuring parameters control minimum size parameters control big newly allocated spaces gsgc switches gsgc functions variables global garbage collection tenuring macro gc cursors gc information gc errors storage condition errors gsgc failure including system error weak vectors finalizations static arrays etc weak arrays hashtables finalizations example weak vectors finalizations static arrays gray streams allegro cl gray streams htm introduction gray streams allegro cl documenting object oriented protocols stream classes generic functions character input generic functions character output generic functions binary streams functions efficient input output sequences creating streams miscellaneous stream functions international character support allegro cl iacl htm introduction internal representation history unicode memory usage character names external formats external format overview basic external format types unicode fat external format types unicode bom composed external formats defining external formats retrieving existing external formats external format runtime mode external format usage streams string external format lisp arrays external formats bit lisp older allegro cl external format compatibility foreign functions external formats locales initial locale allegro cl starts locales applications localization support allegro cl introduction locales locale definition locale attribute accessors string collation international characters earlier international allegro cl compatibility euc module mode option removala functions symbols variables documentation external format apib newline discussionc bit imagesd links unicode reports allegro cl imap pop interface imap htm imap interface imap facility package mailboxes messages flags connecting server mailbox manipulation message manipulation mailbox accessors fetching letter searching messages examples connect imap server machine holding email select inbox incoming mail arrives check many messages mailbox pop interface conditions signaled imap pop interfaces mime support smtp interface used sending mail net mail interface parsing validating email addresses implementation implementation htm implementation introduction data types array types arrays short arrays array short ness relationship arrays array like structures short arrays type hierarchy string comparisons short strings characters autoloading autoloaded files located common lisp symbols major extensions load modules miscellaneous implementation details extensions cl make package cl intern cl disassemble cl truename cl probe file cl open cl apropos etc extensions cl make package extensions cl intern extensions cl disassemble extensions cl truename extensions cl probe file extensions cl open extensions cl apropos extensions cl interactive stream p comment open file timing hazards cl directory cl ensure directories exist cl delete cl delete cl delete cl delete duplicates multiprocessing issues reader macros cl features features present missing features allegro cl issue nested conditionals allegro cl cl random cl make random state cl make hash table cl make array cl namestring cl defpackage cl package cl file length cl file write date cl lisp implementation version cl function lambda expression functionality quickly writing reading floats cl provide cl require cl macroexpand cl macroexpand cl simple condition format arguments cl simple condition format control user homedir pathname windows standard readtable read affect standard io syntax modifying readtable init files validity value end arguments sequence functions checked speed pretty printing class precedence list available floating point infinities nans floating point underflow overflow nat unsigned nat types reader macro allegro cl print variables follow cl print variable value bit allegro cl implementations platform specific issues floating point ipp processor allegro cl ansi cl standard compatibility pre ansi cltl allegro cl package changes compile time behavior function data type clos mop clos mop conformance clos optimization function specs fspecs supported function specs low level functionality windows getwinmainargs conformance ansi specification inspector inspector htm inspector introduction inspector commands inspector right margin example inspect installation allegro cl related products installation htm installation introduction definitions terms used document installation sizes supported operating system versions preinstallation steps installing perfstat filesets aix installation steps notes installation allegro cl unix including linux allegro cl may problems starting run selinux testing installation allegro cl unix successful installation windows testing installation allegro cl windows successful installation mac os x installing gtk open motif mac os x installing x gtk mac os x installing openmotif mac os x testing installation allegro cl mac os x successful installing emacs web installing openssl libraries windows allegro cl products getting license file installing source code express edition information express license running ide allegro cl express linux creating additional express edition images windows student edition information installing student edition allegro cl documentation introduction overview introduction htm documentation introduction common graphics integrated development environment documentation ansi common lisp metaobject protocol documentation notation overview section allegro cl documentation table contents allegro cl documentation list overview html documents reference section assistance available internet world wide web allegro cl faq patches patch information get patches patches downloaded updating bundle file reporting bugs report bugs send questions core files useful contacting franz inc sales licensing assistance information jil java lisp jil htm introduction lexical items types files def java class def java method special symbols special forms functions macros package import def java macro using jil compiler test suite example tictactoe example jlinker dynamic link lisp java jlinker htm introduction jlinker thread safety creating dynamically linked lisp java application calling java two calling models data types conversions two implementations dynamic linkage lisp reference funcall model dynamic linkage lisp reference class model dynamic linkage java reference initialization functions variables event handling lightweight callback lisp methods lisp functions dispatch java events implemented sub classes awt event handlers n issues java applets re entrancy calling methods inner classes portability issues installation files involved installing jlinker dedicated java server peer peer interaction one lisp several java client server connections native java issues ld library path dumplisp event polling miscellaneous caveats complete code example packaging lisp applications java beans servlets jlinker java bean api jlinker servlet api loading loading htm using load function eof encountered error load special utilities loading applications search lists search list structure search lists variables search list example allegro presto facility removed loading case modes user defined main main htm introduction unix remarks main unix windows remarks main windowsa potential problems user defined main linux miscellaneous functionality miscellaneous htm introduction fasl reader writer miscellaneous extensions creating using pll files md sha hmac rc message digest support base support support encryption support blowfish encryption support rsa encryption support gzip compression decompression pam support allegro common lisp pam conversation functions asdf support allegro cl tar support allegro cl coverage analysis allegro cl mop documentation mop contents html multiprocessing multiprocessing htm multiprocessing introduction data types added standard common lisp maximum number simultaneous processes variables functions threads processes native threads foreign functions wait functions depend external events waiting input stream mp process wait vs mp wait input available process functions variables processes dynamic environments lisp listeners special variable bindings gates semaphores queues process locks cl sleep minimum sleeping time simple example multiprocessinga wide binding bindstack indexb processes runtime analyzer allegro mysql direct connect library mysql htm allegro mysql introduction basic operation allegro mysql mysql errors mysql examples conversions mysql multiprocessing mysql programming interface ndbm support allegro cl ndbm htm ndbm introduction ndbm interface ole interface ole htm introduction ole support introduction high level ole ocx interface ocx objects allegro cl type libraries typelib entity coclass typelib entity enum typelib entity interface ole ocx low level internals discussion reference guide interface operators index high level interface operators introduction low level ole interface sample programs system structure basic concepts important clos issues allegro cl ole application special ole data types language locale interfaces objects registry writing automation client dynamic naming unique ids classes lisp remote autotool class set writing server defining interfaces low level view class hierarchies control flow oracle interface allegro oracle direct connect oracle interface htm oracle interface introduction prerequisites implementation details connections oracle blocking non blocking modes oracle datatypes cursors oracle interface api api connecting disconnecting excuting dml ddl one step execution sql statement step step execution sql statement convert argument syntax convert argument convert argument values binding parameters multiple statement handles statement handle parameters setting flags obtaining schema information managing cursors examples using oracle interface index oracle interface operating system interface os interface htm operating system interface subprocess functions filesystem manipulation functions temporary directory files accessing command line arguments polling setting environment variables operating system interface osi module system calls library routines dealing timea operating system interface functionality osi file handling functionality osi time functionality osi password functionality osi shadow password functionality osi group file access osi networks file access osi services file access osi protocols file access osi process uid gid interface functions osi file locking functions osi miscellaneous low level functionality osi miscellaneous higher level functionality lisp constants corresponding operating system constants operating system constants defined allegro cl osi constants htm lisp constants corresponding operating system constantsa defined operating system lisp constants architecture packages packages htm packages introduction hierarchical packages relative package names compatibility ansi common lisp package prefixes reserved allegro cl new common lisp functions implementation hierarchical packages testing hierarchical packages implementation packages allegro cl notes specific packages package nicknames package locking package definition locking package locking package definition locking implementation packages package locked errors locally circumventing package locked errors packages locked default justification package locking pathnames pathnames htm unix symbolic links truenames windows devices parsing unix pathnames preprocessing determining directory component determining name component determining type component anomalies table examples directory component merged pathnames parsing windows pathnames miscellaneous pathname functions logical pathnames logical pathnames introduction logical pathnames general implementation details logical pathnames points note details cl load logical pathname translations pathname wildcard syntax allegro prolog prolog html regular expression api regexp htm regular expression handling allegro cl two implementations new regexp module matching mode regexp module regular expression syntax summary capturing back reference regexp trees user level api regexp module compatibility issues regexp module performance notes regexp module older regexp api release notes allegro cl release notes htm introduction information changes new stuff since release fasl files compatible versions operating systems pre lisp compiled files must recompiled old fasl files load fasl files may incompatible different lisps hardware release notes installation release notes specific platforms mac os x notes heap start locations panasonic ipp notes release notes base lisp new features base lisp features added allegro cl initial release allegro cl non backward compatible changes base lisp new features allegro cl changes notes base lisp multiprocessing smp release notes base lisp platform specific information release notes clim release notes common graphics ide common graphics ide mac significant changes common graphics non backward compatible changes common graphics changes common graphics ide release notes opening projects releases prior functionality handle differences windows gtk release notes winapi module release notes allegroserve release notes emacs lisp interface availability clx allegro cl release notes orblinka ansi conformance allegro cl remote procedure call support allegro cl rpc htm introduction package module rpc security considerations simple rpc example connection options server classes port classes stream socket connections datagram socket connection shared memory connections creating new rpc port server classes security mixins subclasses lisp rpc programming interface stream socket connections connecting stream sockets explicit port interface stream sockets declarative interface stream sockets callback style stream sockets datagram socket connections connecting datagram sockets explicit port interface datagram socket connections declarative interface datagram socket connections callback style datagram socket connections shared memory connections windows making shared memory connection explicit port interface shared memory connections declarative interface shared memory connections callback style shared memory connections data representation uniqueness remote references argument conversions operator conversion data type qualifiers error messages tags error messages simple error instances error keywords returned second value gates examples running several communicating allegro cl images index rpc operators classes variables allegro cl runtime runtime htm allegro runtime introduction standard runtime dynamic runtime partner runtime creating runtime applications conditions distributing allegro runtime created applications runtime analyzer runtime analyzer htm runtime analyzer introduction three types analysis general information time analyzer space analyzer call counting profiler invoking runtime analyzer points including information temporary files profiling error could read text section controlling operation data collection control data collection runtime analysis multiprocessing enabled closures runtime analysis output interpreting results call count results space time results disassemble profile function note header results examplesa headers show flat profile show call graph output sax xml parser allegro common lisp sax htm sax parser introduction xml introduction xml versions parsing xml documents well formed xml documents valid xml documents sax api allegro cl testing sax parser test sax parser class lxml lxml sax lxml module pxml sax module pxml dual module pxml reference index shell module interface shell module htm introduction operators variables classes shell module symmetric multiprocessing allegro cl smp htm symmetric multiprocessing introduction loading smp related functionality example difference smp lisp non smp lisp non smp images platforms support smp deprecated macros deprecated macro excl atomically deprecated macro without interrupts deprecated macro sys without scheduling new macros related functionality non synchronizing usages atomic read modify write primitives concurrency control shared objects sharable locks barrier api queues condition variables safe unsafe operators unsafe standard lisp operations features modules require provide external format loading etc suspending processes ensuring code loaded smp lisp soap api allegro cl soap htm preface introduction simple client example components api element definition type definition built schema types making client call soap server components soap network server exporting methods controlling access methods defining soap methods programming notes multiple threads connector class hierarchy things go wrong debugging soap interfaces n issues wsdl support limitations wsdl support wsdl functions variables namespaces packages important namespaces packages namespace definition operators deducing namespaces used wsdl file mapping soap structures clos classes generated classes generated accessors generated constructors decoders encoders call wrapper methods mapping soap names lisp names generate soap client interface wsdl definition combining several wsdl definitions one lisp image customizing generated code headers faults errors index allegro cl socket library socket htm introduction background support internet protocol version ipv ip addresses allegro cl characteristics stream sockets connections host naming variables functions errors examples secure socket layer ssl ssl history secure connections client server authentication certificates crl support allegro cl ssl api source file recording source file recording htm source file recording introduction functions implement source file recording redefinition warnings pathname comparison allegro cl startup startup htm allegro directory allegro cl executables alisp alisp mlisp mlisp allegro allegro ansi allegro express allegro cl license file starting allegro cl starting unix machines starting unix using shell script starting windows machines starting allegro cl windows console app starting windows using bat files executable image additional files executable image names argument defaults command line arguments files lisp must find start files may need later files lisp needs start dll files built image files lisp needs start allegro directory start message messages like xlib extension randr missing running lisp subprocess emacs starting lisp subprocess emacs first time starting lisp within emacs first time emacs lisp interface start using ide emacs starting lisp shell start problems exit lisp exit sure lisp starts initialization sys siteinit cl clinit cl files errors initialization file top level commands initialization files cannot effectively set variable bound load starting allegro composer clinit cl setting global variables initialization files bindings defined many bindings specific values variables actual values set value listener sees sample initialization file lisp starts initial prompt errors system seems hang infinite loop enough c c unix always interrupt allegro icon system tray interrupt windows help running lisp package startup files may looked startup startup streams allegro cl streams htm simple stream introduction simple stream background problems gray streams new stream hierarchy programming model get simple stream get gray stream trivial stream dispatch simple stream description device level functionality device interface implementation standard interface functionality simple streams implementation common lisp functions simple streams extended interface functionality blocking behavior simple streams endian swap keyword argument read vector write vector force output finish output policy higher level functions simple stream class hierarchy implementation strategies control character processing device writing tips defining new stream classes device open scratch device open implementation helpers device read device write stream implementation functions macros details stream line column charpos simple stream class hierarchy illustrated encapsulating streams encapsulation terminology strategy descriptions necessary encapsulation valid connections octet oriented character oriented streams examples stream encapsulations rot b example bidirectional stream encapsulation base example binary stream encapsulation encapsulating composing external formatsa built stream methods uses print object built stream methodb peek byte unread byte string utility functions allegro cl string utilities htm operators util string module allegro cl test harness test harness htm tester module api test harness variables test harness macros examples running tests multiple threads lisp processes top level top level htm introduction lisp top level listener prompt commands expressions case sensitivity input getting help top level commands command expression history anomalies history list break levels commands manipulate break levels commands compiling loading file arguments read strings top level interaction multiprocessing commands killing processes exiting lisp miscellaneous top level commands automatic timing information top level variables adding new top level commands lisp shared library unix shared library htm updated interface lisp shared library application files lisp shared library application components happens lisp shared library initialization note using foreign functions non os thread platforms c api routines data structures lisp api compilation deliverya os specific library search path uri support allegro cl uri htm introduction uri api definition parsing escape decoding encoding path interning uris allegro cl implementation notes examples using webactions using webactions html release notes allegro cl version release notes htm introduction information changes new stuff since release fasl files compatible versions operating systems pre lisp compiled files must recompiled old fasl files load fasl files may incompatible different lisps hardware release notes installation release notes specific platforms os patch needed solaris sparcs mac os x notes aix notes heap start locations release notes base lisp new features base lisp features added allegro cl initial release allegro cl new features allegro cl non backward compatible changes base lisp changes notes base lisp base lisp platform specific information release notes clim release notes common graphics ide common graphics ide mac significant changes common graphics non backward compatible changes common graphics changes common graphics ide release notes opening projects releases prior functionality handle differences windows gtk release notes winapi module release notes allegroserve release notes emacs lisp interface availability clx allegro cl release notes orblinka ansi conformance allegro cl webactions webactions html xml rpc api allegro common lisp xml rpc htm xml rpc allegro cl introduction various utility objects xml rpc xml rpc client api xml rpc data api xml rpc server api xml rpc examples index copyright c franz inc oakland ca usa rights reserved documentation allegro cl version page revised page created tocdocoverviewcgdocrelnotesfaqindexpermutedindexallegro cl version object described page changed version